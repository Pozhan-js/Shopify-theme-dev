{% comment %}
  黑白神秘系列专属模板
{% endcomment %}

{% paginate collection.products by 12 %}
<div class="collection-template mystery-black">
  {% if collection.image %}
    <div class="banner-image-container">
      <img 
        src="{{ collection.image | img_url: '1920x600', crop: 'center' }}" 
        alt="{{ collection.title }}"
        class="banner-image"
        loading="lazy"
        width="1920"
        height="600"
        onerror="this.style.display='none'"
      >
      <div class="banner-title-overlay">
        <h1 class="collection-title">{{ collection.title }}</h1>
      </div>
    </div>
  {% endif %}

  <div class="product-grid-wrapper">
    {% if collection.products.size > 0 %}
      {% for product in collection.products %}
        <div class="product-container">
          <a href="{{ product.url }}" class="product-image-link">
            <img src="{{ product.featured_image | img_url: '400x400' }}" 
                 alt="{{ product.title }}"
                 loading="lazy"
                 width="400"
                 height="400">
          </a>
          <div class="product-info">
            <h3 class="product-title">
              <a href="{{ product.url }}">{{ product.title }}</a>
            </h3>
            <div class="product-price">
              {{ product.price | money }}
            </div>
            <div class="product-actions">
              <form method="post" action="/cart/add" class="add-to-cart-form">
                <input type="hidden" name="id" value="{{ product.variants.first.id }}">
                <button type="submit" class="add-to-cart-btn">加入购物车</button>
              </form>
            </div>
          </div>
        </div>
      {% endfor %}
    {% else %}
      <div class="empty-collection">
        <p>暂无商品</p>
      </div>
    {% endif %}
  </div>

  {% if paginate.pages > 1 %}
    {{ paginate | default_pagination }}
  {% endif %}
</div>
{% endpaginate %}

<style>
/* 黑白神秘系列专属样式 */
.collection-template.mystery-black {
  background: #000;
  color: #fff;
  min-height: 100vh;
}

/* Banner样式 */
.banner-image-container {
  position: relative;
  height: 60vh;
  overflow: hidden;
}

.banner-image {
  width: 100%;
  height: 100%;
  object-fit: cover;
  filter: grayscale(100%) contrast(1.2);
}

.banner-title-overlay {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  text-align: center;
  width: 100%;
}

.collection-title {
  font-size: 4rem;
  font-weight: 700;
  text-transform: uppercase;
  letter-spacing: 0.5rem;
  color: white;
  text-shadow: 2px 2px 10px rgba(0,0,0,0.5);
  margin: 0;
  padding: 20px;
  background-color: rgba(0,0,0,0.3);
  display: inline-block;
}

/* 产品网格样式 */
.product-grid-wrapper {
  padding: 40px 20px;
  max-width: 1400px;
  margin: 0 auto;
}

.products-grid {
  display: grid;
  grid-template-columns: repeat(4, minmax(0, 1fr));
  gap: 20px;
  max-width: 1400px;
  margin: 0 auto;
  padding: 0 20px;
}

.product-container {
  max-width: 100%;
  margin: 0;
  padding: 15px;
  box-sizing: border-box;
}

@media (max-width: 1024px) {
  .products-grid {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
}

@media (max-width: 768px) {
  .products-grid {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
}

@media (max-width: 480px) {
  .products-grid {
    grid-template-columns: 1fr;
  }
}

@media (max-width: 1024px) {
  .products-grid {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
}

@media (max-width: 768px) {
  .products-grid {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
}

@media (max-width: 480px) {
  .products-grid {
    grid-template-columns: 1fr;
  }
}

.product-container {
  background: rgba(255,255,255,0.05);
  border: 1px solid rgba(255,255,255,0.1);
  border-radius: 8px;
  overflow: hidden;
  transition: all 0.3s ease;
  display: flex;
  flex-direction: column;
}

.product-image-link {
  display: block;
  height: 0;
  padding-bottom: 100%;
  position: relative;
  overflow: hidden;
}

.product-image-link img {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.product-container:hover {
  transform: translateY(-5px);
  box-shadow: 0 10px 20px rgba(0,0,0,0.3);
  border-color: rgba(255,255,255,0.3);
}

.add-to-cart-btn {
  background: transparent;
  border: 1px solid #fff;
  color: #fff;
  padding: 8px 16px;
  border-radius: 4px;
  cursor: pointer;
  transition: all 0.3s ease;
  width: 100%;
  margin-top: 10px;
}

.add-to-cart-btn:hover {
  background: rgba(255,255,255,0.1);
}

/* 分页样式 */
.pagination {
  display: flex;
  justify-content: center;
  margin-top: 40px;
}

/* 响应式设计 */
@media (max-width: 768px) {
  .products-grid {
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    gap: 20px;
  }
}

@media (max-width: 480px) {
  .banner-image-container {
    height: 40vh;
  }
  
  .products-grid {
    grid-template-columns: 1fr;
  }
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
  // AJAX加入购物车
  document.querySelectorAll('.add-to-cart-form').forEach(form => {
    form.addEventListener('submit', async (e) => {
      e.preventDefault();
      const formData = new FormData(form);
      const submitBtn = form.querySelector('button');
      const originalText = submitBtn.textContent;
      
      try {
        submitBtn.textContent = '添加中...';
        submitBtn.disabled = true;
        
        const response = await fetch('/cart/add.js', {
          method: 'POST',
          body: formData
        });
        
        const result = await response.json();
        
        if(result.status === 'success') {
          submitBtn.textContent = '已添加';
          setTimeout(() => {
            submitBtn.textContent = originalText;
            submitBtn.disabled = false;
          }, 2000);
          
          // 更新购物车数量
          fetch('/cart.js')
            .then(res => res.json())
            .then(cart => {
              const cartCount = document.querySelector('.cart-count');
              if(cartCount) {
                cartCount.textContent = cart.item_count;
              }
            });
        }
      } catch (error) {
        console.error('Error:', error);
        submitBtn.textContent = '添加失败';
        setTimeout(() => {
          submitBtn.textContent = originalText;
          submitBtn.disabled = false;
        }, 2000);
      }
    });
  });
});
</script>
