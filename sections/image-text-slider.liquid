<div class="image-text-slider">
  <div class="page-width">
    <div class="slider-header">
      <h2 class="slider-title">{{ section.settings.title }}</h2>
      <div class="slider-controls">
        <button class="slider-prev">←</button>
        <button class="slider-next">→</button>
      </div>
    </div>
    
    <div class="slider-container">
      <div class="slides-wrapper">
        {% for block in section.blocks %}
          <div class="slide" {{ block.shopify_attributes }}>
            <div class="slide-content">
              <div class="slide-image">
                {% if block.settings.image != blank %}
                  <img src="{{ block.settings.image | img_url: '800x' }}" 
                       alt="{{ block.settings.image.alt | escape }}"
                       width="800"
                       height="600"
                       loading="lazy"
                       style="object-fit: cover;">
                {% else %}
                  <div class="placeholder-image">{{ 'image' | placeholder_svg_tag }}</div>
                {% endif %}
              </div>
              <div class="slide-text">
                <div class="text-top-image">
                  {% if block.settings.top_image != blank %}
                    <img src="{{ block.settings.top_image | img_url: 'master' }}" 
                         alt="{{ block.settings.top_image.alt | escape }}"
                         width="{{ block.settings.top_image_width }}"
                         height="{{ block.settings.top_image_height }}"
                         style="width: {{ block.settings.top_image_width }}px; 
                                height: {{ block.settings.top_image_height }}px;
                                margin-top: {{ block.settings.image_margin_top }}px; 
                                margin-bottom: {{ block.settings.image_margin_bottom }}px;
                                object-fit: contain;"
                         loading="lazy">
                  {% endif %}
                </div>
                {{ block.settings.text }}
              </div>
            </div>
          </div>
        {% endfor %}
      </div>
    </div>
  </div>
</div>

<style>
  .slider-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 20px;
  }
  .slider-controls button {
    background: none;
    border: none;
    font-size: 24px;
    cursor: pointer;
    padding: 5px 10px;
  }
  .slider-container {
    position: relative;
    overflow: hidden;
    width: 100%;
  }
  .slides-wrapper {
    display: flex;
    transition: transform 0.5s ease-in-out;
    will-change: transform;
  }
  .slide {
    flex: 0 0 100%;
    min-width: 0;
  }
  .slide-content {
    display: flex;
    gap: 30px;
    padding: 0 20px;
  }
  .slide-image {
    flex: 0 0 60%;
  }
  .slide-text {
    flex: 0 0 40%;
    text-align: left;
  }
  .slide-text h2 {
    margin-top: 0;
    margin-block-start: 0;
  }
  .text-top-image {
    margin-bottom: 10px;
  }
  .placeholder-image {
    background: #f5f5f5;
    padding: 20px;
  }
  @media (max-width: 749px) {
    .slide-content {
      flex-direction: column;
    }
    .slide-image,
    .slide-text {
      flex: 0 0 100%;
    }
  }
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const sliderWrapper = document.querySelector('.slides-wrapper');
  const slides = document.querySelectorAll('.slide');
  const prevBtn = document.querySelector('.slider-prev');
  const nextBtn = document.querySelector('.slider-next');
  let currentIndex = 0;
  let autoPlayInterval;
  let isTransitioning = false;

  function goToSlide(index) {
    if (isTransitioning || index < 0 || index >= slides.length) return;
    
    isTransitioning = true;
    currentIndex = index;
    sliderWrapper.style.transform = `translateX(-${currentIndex * 100}%)`;
  }

  function startAutoPlay() {
    autoPlayInterval = setInterval(() => {
      const nextIndex = (currentIndex + 1) % slides.length;
      goToSlide(nextIndex);
    }, 5000);
  }

  sliderWrapper.addEventListener('transitionend', () => {
    isTransitioning = false;
  });

  prevBtn.addEventListener('click', () => {
    if (isTransitioning) return;
    clearInterval(autoPlayInterval);
    goToSlide((currentIndex - 1 + slides.length) % slides.length);
    startAutoPlay();
  });

  nextBtn.addEventListener('click', () => {
    if (isTransitioning) return;
    clearInterval(autoPlayInterval);
    goToSlide((currentIndex + 1) % slides.length);
    startAutoPlay();
  });

  startAutoPlay();
});
</script>

{% schema %}
{
  "name": "图文轮播",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "标题",
      "default": "轮播标题"
    }
  ],
  "blocks": [
    {
      "type": "slide",
      "name": "轮播项",
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "图片"
        },
        {
          "type": "image_picker",
          "id": "top_image",
          "label": "顶部小图片"
        },
        {
          "type": "range",
          "id": "top_image_width",
          "min": 20,
          "max": 200,
          "step": 5,
          "unit": "px",
          "label": "小图片宽度",
          "default": 100
        },
        {
          "type": "range",
          "id": "top_image_height",
          "min": 10,
          "max": 100,
          "step": 2,
          "unit": "px",
          "label": "小图片高度",
          "default": 16
        },
        {
          "type": "range",
          "id": "image_margin_top",
          "min": 0,
          "max": 100,
          "step": 1,
          "unit": "px",
          "label": "图片上边距",
          "default": 50
        },
        {
          "type": "range",
          "id": "image_margin_bottom",
          "min": 0,
          "max": 100,
          "step": 1,
          "unit": "px",
          "label": "图片下边距",
          "default": 5
        },
        {
          "type": "richtext",
          "id": "text",
          "label": "文本内容",
          "default": "<p>在这里输入文本内容</p>"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "图文轮播",
      "category": "轮播",
      "blocks": [
        {
          "type": "slide"
        },
        {
          "type": "slide"
        }
      ]
    }
  ]
}
{% endschema %}
