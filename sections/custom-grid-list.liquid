{%- liquid
  assign item_count = section.blocks.size
  assign visible_count = 4
-%}

{% schema %}
{
  "name": "跑马灯网格列表",
  "tag": "section",
  "class": "section",
  "max_blocks": 20,
  "settings": [
    {
      "type": "range",
      "id": "speed",
      "min": 1,
      "max": 50,
      "step": 1,
      "unit": "s",
      "label": "滚动速度",
      "default": 5
    },
    {
      "type": "checkbox",
      "id": "enable_scroll",
      "label": "启用滚动效果",
      "default": true
    },
    {
      "type": "range",
      "id": "gap",
      "min": 0,
      "max": 50,
      "step": 2,
      "unit": "px",
      "label": "网格间距",
      "default": 16
    }
  ],
  "blocks": [
    {
      "type": "item",
      "name": "网格项",
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "图片"
        },
        {
          "type": "text",
          "id": "title",
          "label": "标题",
          "default": "标题"
        },
        {
          "type": "checkbox",
          "id": "show_title",
          "label": "显示标题",
          "default": true
        },
        {
          "type": "select",
          "id": "title_position",
          "label": "标题位置",
          "options": [
            {
              "value": "left",
              "label": "底部居左"
            },
            {
              "value": "center",
              "label": "底部居中"
            },
            {
              "value": "right",
              "label": "底部居右"
            }
          ],
          "default": "center"
        },
        {
          "type": "url",
          "id": "link",
          "label": "链接"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "跑马灯网格列表",
      "blocks": [
        {
          "type": "item"
        },
        {
          "type": "item"
        },
        {
          "type": "item"
        },
        {
          "type": "item"
        },
        {
          "type": "item"
        },
        {
          "type": "item"
        },
        {
          "type": "item"
        },
        {
          "type": "item"
        }
      ]
    }
  ]
}
{% endschema %}

<style>
  .marquee-grid {
    display: flex;
    gap: {{ section.settings.gap }}px;
    width: 100%;
    overflow: hidden;
    position: relative;
  }

  .marquee-track {
    display: flex;
    gap: {{ section.settings.gap }}px;
    {% if section.settings.enable_scroll %}
      animation: scroll {{ section.settings.speed }}s linear infinite;
    {% endif %}
  }

  .marquee-item {
    position: relative;
    min-width: calc((100% - ({{ section.settings.gap }}px * 3)) / 4);
    flex-shrink: 0;
  }

  .marquee-link {
    display: block;
    position: relative;
    overflow: hidden;
    border-radius: 8px;
  }

  .marquee-image {
    width: 100%;
    height: 200px;
    display: block;
    object-fit: cover;
    object-position: center;
  }

  .marquee-title {
    position: absolute;
    bottom: 10px;
    color: white;
    padding: 5px 10px;
    font-weight: bold;
    text-shadow: 1px 1px 3px rgba(0,0,0,0.5);
    background-color: rgba(0,0,0,0.3);
    border-radius: 4px;
    white-space: normal;
    word-wrap: break-word;
    max-width: 90%;
  }

  .marquee-title[data-position="left"] {
    left: 10px;
    right: auto;
    text-align: left;
  }

  .marquee-title[data-position="center"] {
    left: 50%;
    right: auto;
    transform: translateX(-50%);
    text-align: center;
  }

  .marquee-title[data-position="right"] {
    right: 10px;
    left: auto;
    text-align: right;
  }

  @keyframes scroll {
    0% {
      transform: translateX(0);
    }
    100% {
      transform: translateX(calc(-100% - {{ section.settings.gap }}px));
    }
  }

  @media screen and (max-width: 749px) {
    .marquee-item {
      min-width: calc((100% - ({{ section.settings.gap }}px * 1)) / 2);
    }
  }
</style>

<div class="marquee-grid">
  <div class="marquee-track">
    {%- for block in section.blocks -%}
      <div class="marquee-item" {{ block.shopify_attributes }}>
        <a href="{{ block.settings.link }}" class="marquee-link">
          {%- if block.settings.image != blank -%}
            <img
              src="{{ block.settings.image | img_url: '400x' }}"
              alt="{{ block.settings.title | escape }}"
              class="marquee-image"
              loading="lazy"
              width="400"
              height="{{ 400 | divided_by: block.settings.image.aspect_ratio | round }}"
            >
          {%- endif -%}
          {%- if block.settings.show_title -%}
            <div class="marquee-title" data-position="{{ block.settings.title_position | default: 'center' }}">
              {{ block.settings.title }}
            </div>
          {%- endif -%}
        </a>
      </div>
    {%- endfor -%}
    {%- for block in section.blocks -%}
      <div class="marquee-item">
        <a href="{{ block.settings.link }}" class="marquee-link">
          {%- if block.settings.image != blank -%}
            <img
              src="{{ block.settings.image | img_url: '400x' }}"
              alt="{{ block.settings.title | escape }}"
              class="marquee-image"
              loading="lazy"
              width="400"
              height="{{ 400 | divided_by: block.settings.image.aspect_ratio | round }}"
            >
          {%- endif -%}
          <div class="marquee-title">{{ block.settings.title }}</div>
        </a>
      </div>
    {%- endfor -%}
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const track = document.querySelector('.marquee-track');
    const items = document.querySelectorAll('.marquee-item');
    const gap = parseInt('{{ section.settings.gap }}');

    {% if section.settings.enable_scroll %}
      // 复制items实现无缝滚动
      track.innerHTML += track.innerHTML;

      // 暂停动画当hover
      track.addEventListener('mouseenter', () => {
        track.style.animationPlayState = 'paused';
      });

      track.addEventListener('mouseleave', () => {
        track.style.animationPlayState = 'running';
      });
    {% endif %}
  });
</script>
