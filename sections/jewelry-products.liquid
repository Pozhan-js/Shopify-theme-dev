<!-- 珠宝产品展示section - 自动获取全部系列 + 心愿单功能 -->
<div class="jewelry-products-container">
  <div class="jewelry-products-wrapper">
    <div class="section-title-wrapper">
      <h2 class="section-title">{{ section.settings.section_title | default: 'Featured Collections' }}</h2>
      <div class="title-underline"></div>
    </div>

    <!-- TAB导航栏 - 自动获取系列 -->
    <div class="tab-navigation-wrapper">
      <div class="tab-navigation">
        {%- assign collections_to_show = collections | where: 'published', true -%}
        {%- if section.settings.exclude_all_collection -%}
          {%- assign collections_to_show = collections_to_show | where: 'handle', '!=', 'all' -%}
        {%- endif -%}
        {%- assign sorted_collections = collections_to_show | sort: section.settings.sort_by -%}
        {%- assign limited_collections = sorted_collections | limit: section.settings.max_collections -%}

        {%- for collection in limited_collections -%}
          {%- if collection.products.size > 0 -%}
            <button
              type="button"
              class="tab-btn {% if forloop.first %}active{% endif %}"
              data-tab="{{ collection.handle }}"
            >
              {{ collection.title }}
            </button>
          {%- endif -%}
        {%- endfor -%}
      </div>
    </div>

    <!-- 商品列表容器 -->
    <div class="tab-content">
      {%- for collection in limited_collections -%}
        {%- if collection.products.size > 0 -%}
          <div class="tab-pane {% if forloop.first %}active{% endif %}" id="tab-{{ collection.handle }}">
            <div class="products-grid-container">
              <!-- 滑动控制箭头 -->
              <div class="products-navigation">
                <button class="nav-arrow nav-arrow-left" onclick="slideProducts('left')" aria-label="向左滑动">
                  <svg width="20" height="20" viewBox="0 0 24 24" fill="none">
                    <path d="M15 18L9 12L15 6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                  </svg>
                </button>
                <button class="nav-arrow nav-arrow-right" onclick="slideProducts('right')" aria-label="向右滑动">
                  <svg width="20" height="20" viewBox="0 0 24 24" fill="none">
                    <path d="M9 18L15 12L9 6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                  </svg>
                </button>
              </div>

              <div class="products-grid">
                {%- assign display_products = collection.products | limit: section.settings.products_per_collection -%}
                {%- for product in display_products -%}
                  <div class="product-card">
                    <div class="product-image-container">
                      <!-- 心愿单按钮 -->
                      {%- if section.settings.show_wishlist -%}
                        <div class="wishlist-button-container">
                          <button
                            type="button"
                            class="wishlist-btn"
                            data-product-id="{{ product.id }}"
                            data-product-handle="{{ product.handle }}"
                            aria-label="お気に入りに追加"
                          >
                            <svg class="wishlist-icon-empty" width="20" height="20" viewBox="0 0 24 24" fill="none">
                              <path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                            </svg>
                            <svg
                              class="wishlist-icon-filled"
                              width="20"
                              height="20"
                              viewBox="0 0 24 24"
                              fill="currentColor"
                            >
                              <path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"/>
                            </svg>
                          </button>
                        </div>
                      {%- endif -%}

                      <!-- 图片轮播进度条 -->
                      <div class="image-progress-bar">
                        {%- assign image_count = product.images.size -%}
                        {%- if image_count > 1 -%}
                          {%- for i in (1..image_count) -%}
                            <div class="progress-dot" data-index="{{ forloop.index0 }}"></div>
                          {%- endfor -%}
                        {%- endif -%}
                      </div>

                      <a href="{{ product.url }}" class="product-link">
                        <div class="product-images-wrapper">
                          {%- if product.images.size > 0 -%}
                            {%- for image in product.images -%}
                              <img
                                src="{{ image | image_url: width: 380, height: 380, crop: 'center' }}"
                                alt="{{ product.title }}"
                                class="product-image {% if forloop.first %}active{% endif %}"
                                data-index="{{ forloop.index0 }}"
                                loading="lazy"
                                draggable="false"
                              >
                            {%- endfor -%}
                          {%- else -%}
                            <div class="product-placeholder">
                              <span class="placeholder-text">画像なし</span>
                            </div>
                          {%- endif -%}
                        </div>
                      </a>

                      <!-- 悬停购物车按钮 -->
                      {%- if section.settings.show_add_to_cart -%}
                        <div class="hover-add-to-cart">
                          <form method="post" action="/cart/add" class="hover-cart-form">
                            <input type="hidden" name="id" value="{{ product.variants.first.id }}">
                            <input type="hidden" name="quantity" value="1">
                            <button type="submit" class="hover-cart-btn">
                              <svg width="16" height="16" viewBox="0 0 24 24" fill="none">
                                <path d="M9 2L6 6H3L5 20H19L21 6H18L15 2H9Z" stroke="currentColor" stroke-width="2"/>
                              </svg>
                              {{ section.settings.add_to_cart_text | default: 'カートに追加' }}
                            </button>
                          </form>
                        </div>
                      {%- endif -%}
                    </div>

                    <div class="product-info">
                      <h3 class="product-title">
                        <a href="{{ product.url }}">{{ product.title }}</a>
                      </h3>
                      <div class="product-price">
                        {%- if product.compare_at_price > product.price -%}
                          <span class="original-price">{{ product.compare_at_price | money }}</span>
                        {%- endif -%}
                        <span class="current-price">{{ product.price | money }}</span>
                      </div>

                      <!-- 手机端按钮组 -->
                      <div class="mobile-buttons-group">
                        <!-- 手机端心愿单按钮 -->
                        {%- if section.settings.show_wishlist -%}
                          <button
                            type="button"
                            class="mobile-wishlist-btn"
                            data-product-id="{{ product.id }}"
                            data-product-handle="{{ product.handle }}"
                            aria-label="お気に入りに追加"
                          >
                            <svg class="wishlist-icon-empty" width="16" height="16" viewBox="0 0 24 24" fill="none">
                              <path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                            </svg>
                            <svg
                              class="wishlist-icon-filled"
                              width="16"
                              height="16"
                              viewBox="0 0 24 24"
                              fill="currentColor"
                            >
                              <path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"/>
                            </svg>
                          </button>
                        {%- endif -%}

                        <!-- 手机端购物车按钮 -->
                        {%- if section.settings.show_add_to_cart -%}
                          <div class="mobile-add-to-cart">
                            <form method="post" action="/cart/add" class="mobile-cart-form">
                              <input type="hidden" name="id" value="{{ product.variants.first.id }}">
                              <input type="hidden" name="quantity" value="1">
                              <button type="submit" class="mobile-cart-btn">
                                <svg width="16" height="16" viewBox="0 0 24 24" fill="none">
                                  <path d="M9 2L6 6H3L5 20H19L21 6H18L15 2H9Z" stroke="currentColor" stroke-width="2"/>
                                </svg>
                                {{ section.settings.add_to_cart_text | default: 'カートに追加' }}
                              </button>
                            </form>
                          </div>
                        {%- endif -%}
                      </div>
                    </div>
                  </div>
                {%- endfor -%}
              </div>
            </div>
          </div>
        {%- endif -%}
      {%- endfor -%}
    </div>

    {%- if section.settings.show_view_more -%}
      <div class="view-more-container">
        <a href="{{ section.settings.view_more_url | default: '/collections' }}" class="view-more-btn">
          {{ section.settings.view_more_text | default: 'もっと見る' }}
        </a>
      </div>
    {%- endif -%}
  </div>
</div>

<!-- 心愿单应用集成区域 -->
{%- if section.settings.show_wishlist -%}
  <div id="wishlist-app-container">
    {%- for block in section.blocks -%}
      {%- case block.type -%}
        {%- when 'wishlist_app' -%}
          <div class="wishlist-app-block" {{ block.shopify_attributes }}>
            {{ block.settings.app_embed | default: '' }}
          </div>
      {%- endcase -%}
    {%- endfor -%}
  </div>
{%- endif -%}

<style>
  /* 日文无衬线字体设置 */
  .jewelry-products-container {
    font-family: 'Hiragino Sans', 'Hiragino Kaku Gothic ProN', 'Yu Gothic', 'Meiryo', sans-serif;
    padding: {{ section.settings.section_padding_top }}px 20px {{ section.settings.section_padding_bottom }}px;
    max-width: {{ section.settings.container_width }}px;
    margin: 0 auto;
    background: {{ section.settings.background_color }};
  }

  .jewelry-products-wrapper {
    text-align: center;
  }

  /* 标题样式 - Featured Collections 带下划线 */
  .section-title-wrapper {
    display: flex;
    flex-direction: column;
    align-items: center;
    margin-bottom: 40px;
  }

  .section-title {
    font-size: {{ section.settings.title_size }}px;
    font-weight: {{ section.settings.title_weight }};
    color: {{ section.settings.title_color }};
    margin-bottom: 10px;
    letter-spacing: 1px;
    font-family: 'Hiragino Sans', 'Hiragino Kaku Gothic ProN', 'Yu Gothic', 'Meiryo', sans-serif;
  }

  .title-underline {
    width: {{ section.settings.underline_width }}px;
    height: {{ section.settings.underline_height }}px;
    background-color: {{ section.settings.underline_color }};
    margin: 0 auto;
  }

  /* TAB导航样式 - 日文标签 */
  .tab-navigation-wrapper {
    margin-bottom: 30px;
    overflow: hidden;
  }

  .tab-navigation {
    display: flex;
    justify-content: center;
    gap: 15px;
    overflow-x: auto;
    padding: 0 20px;
    scrollbar-width: none;
    -ms-overflow-style: none;
    white-space: nowrap;
  }

  .tab-navigation::-webkit-scrollbar {
    display: none;
  }

  .tab-btn {
    background: {{ section.settings.tab_bg_color }};
    color: {{ section.settings.tab_text_color }};
    border: {{ section.settings.tab_border_width }}px solid {{ section.settings.tab_border_color }};
    padding: 8px 16px;
    font-size: {{ section.settings.tab_font_size | minus: 2 }}px;
    cursor: pointer;
    transition: all 0.3s ease;
    border-radius: {{ section.settings.tab_border_radius }}px;
    font-family: 'Hiragino Sans', 'Hiragino Kaku Gothic ProN', 'Yu Gothic', 'Meiryo', sans-serif;
    white-space: nowrap;
    flex-shrink: 0;
    min-width: auto;
  }

  .tab-btn:hover {
    background: {{ section.settings.tab_hover_bg_color }};
    color: {{ section.settings.tab_hover_text_color }};
  }

  .tab-btn.active {
    background: {{ section.settings.tab_active_bg_color }};
    color: {{ section.settings.tab_active_text_color }};
  }

  /* TAB内容样式 */
  .tab-content {
    position: relative;
  }

  .tab-pane {
    display: none;
  }

  .tab-pane.active {
    display: block;
  }

  /* 商品网格容器 - 严格控制单行显示 */
  .products-grid-container {
    position: relative;
    padding: 0 70px;
    margin-bottom: 30px;
  }

  /* 滑动控制箭头样式 - 定位在TAB和商品列表中间 */
  .products-navigation {
    position: absolute;
    top: -15px;
    left: 0;
    right: 0;
    height: 0;
    z-index: 1001;
    pointer-events: none;
  }

  .nav-arrow {
    background: #ffffff;
    border: 1px solid #e0e0e0;
    border-radius: 50%;
    width: 44px;
    height: 44px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: none !important;
    color: #424242;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    position: absolute;
    top: 0;
    pointer-events: auto;
    transform: none !important;
  }

  .nav-arrow-left {
    left: 10px;
  }

  .nav-arrow-right {
    right: 10px;
  }

  .nav-arrow:hover {
    background: #ffffff !important;
    color: #424242 !important;
    border-color: #e0e0e0 !important;
    transform: none !important;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1) !important;
  }

  .nav-arrow:active {
    background: #ffffff !important;
    color: #424242 !important;
    border-color: #e0e0e0 !important;
    transform: none !important;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1) !important;
  }

  .nav-arrow:focus {
    background: #ffffff !important;
    color: #424242 !important;
    border-color: #e0e0e0 !important;
    transform: none !important;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1) !important;
    outline: none !important;
  }

  .nav-arrow:disabled {
    opacity: 0.4;
    cursor: not-allowed;
    background: #ffffff !important;
    color: #424242 !important;
    border-color: #e0e0e0 !important;
    transform: none !important;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1) !important;
  }

  .nav-arrow svg {
    width: 20px;
    height: 20px;
  }

  /* 商品网格 - 强制单行布局，关键修复 */
  .products-grid {
    display: flex !important;
    flex-direction: row !important;
    flex-wrap: nowrap !important;
    overflow-x: auto;
    overflow-y: visible;
    gap: {{ section.settings.product_gap }}px;
    scroll-behavior: smooth;
    scrollbar-width: none;
    -ms-overflow-style: none;
    padding: 0;
    margin: 0;
    cursor: grab;
    user-select: none;
    width: 100%;
    height: auto;
    align-items: stretch;
  }

  .products-grid:active {
    cursor: grabbing;
  }

  .products-grid.dragging {
    cursor: grabbing;
    scroll-behavior: auto;
  }

  .products-grid.dragging * {
    pointer-events: none;
  }

  .products-grid::-webkit-scrollbar {
    display: none;
  }

  /* 确保商品卡片严格单行排列，关键修复 */
  .product-card {
    background: {{ section.settings.card_bg_color }};
    border-radius: {{ section.settings.card_border_radius }}px;
    overflow: hidden;
    box-shadow: {{ section.settings.card_shadow }};
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    width: {{ section.settings.card_width }}px;
    min-width: {{ section.settings.card_width }}px;
    max-width: {{ section.settings.card_width }}px;
    flex: 0 0 {{ section.settings.card_width }}px !important;
    flex-shrink: 0 !important;
    flex-grow: 0 !important;
    border: {{ section.settings.card_border_width }}px solid {{ section.settings.card_border_color }};
    display: flex;
    flex-direction: column;
    height: auto;
    position: relative;
  }

  .product-card:hover {
    transform: translateY(-{{ section.settings.card_hover_lift }}px);
    box-shadow: {{ section.settings.card_hover_shadow }};
  }

  /* 图片容器 - 正方形显示 */
  .product-image-container {
    position: relative;
    width: {{ section.settings.card_width }}px;
    height: {{ section.settings.card_width }}px;
    overflow: hidden;
    flex-shrink: 0;
  }

  /* 心愿单按钮样式 */
  .wishlist-button-container {
    position: absolute;
    top: 12px;
    right: 12px;
    z-index: 15;
  }

  .wishlist-btn {
    background: {{ section.settings.wishlist_bg_color }};
    border: none;
    border-radius: 50%;
    width: 36px;
    height: 36px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.3s ease;
    color: {{ section.settings.wishlist_icon_color }};
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    opacity: {{ section.settings.wishlist_opacity | divided_by: 100.0 }};
  }

  .wishlist-btn:hover {
    background: {{ section.settings.wishlist_hover_bg_color }};
    color: {{ section.settings.wishlist_hover_icon_color }};
    transform: scale(1.1);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  }

  .wishlist-btn.active {
    background: {{ section.settings.wishlist_active_bg_color }};
    color: {{ section.settings.wishlist_active_icon_color }};
  }

  .wishlist-btn .wishlist-icon-filled {
    display: none;
  }

  .wishlist-btn.active .wishlist-icon-empty {
    display: none;
  }

  .wishlist-btn.active .wishlist-icon-filled {
    display: block;
  }

  /* 手机端心愿单按钮 */
  .mobile-wishlist-btn {
    background: {{ section.settings.wishlist_bg_color }};
    border: 1px solid {{ section.settings.wishlist_border_color }};
    border-radius: 4px;
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.3s ease;
    color: {{ section.settings.wishlist_icon_color }};
    flex-shrink: 0;
  }

  .mobile-wishlist-btn:hover {
    background: {{ section.settings.wishlist_hover_bg_color }};
    color: {{ section.settings.wishlist_hover_icon_color }};
    border-color: {{ section.settings.wishlist_hover_border_color }};
  }

  .mobile-wishlist-btn.active {
    background: {{ section.settings.wishlist_active_bg_color }};
    color: {{ section.settings.wishlist_active_icon_color }};
    border-color: {{ section.settings.wishlist_active_border_color }};
  }

  .mobile-wishlist-btn .wishlist-icon-filled {
    display: none;
  }

  .mobile-wishlist-btn.active .wishlist-icon-empty {
    display: none;
  }

  .mobile-wishlist-btn.active .wishlist-icon-filled {
    display: block;
  }

  /* 手机端按钮组 */
  .mobile-buttons-group {
    display: none;
    margin-top: 12px;
    gap: 8px;
    align-items: center;
  }

  .mobile-add-to-cart {
    flex: 1;
  }

  /* 图片轮播进度条 */
  .image-progress-bar {
    position: absolute;
    top: 12px;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    gap: 4px;
    z-index: 10;
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .product-card:hover .image-progress-bar {
    opacity: 1;
  }

  .progress-dot {
    width: 20px;
    height: 3px;
    background: rgba(255, 255, 255, 0.4);
    border-radius: 2px;
    transition: background 0.3s ease;
  }

  .progress-dot.active {
    background: rgba(255, 255, 255, 0.9);
  }

  /* 图片轮播容器 */
  .product-images-wrapper {
    position: relative;
    width: 100%;
    height: 100%;
  }

  .product-link {
    display: block;
    width: 100%;
    height: 100%;
  }

  .product-image {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    opacity: 0;
    transition: opacity 0.5s ease;
  }

  .product-image.active {
    opacity: 1;
  }

  .product-placeholder {
    width: 100%;
    height: 100%;
    background: #f5f5f5;
    display: flex;
    align-items: center;
    justify-content: center;
    color: #999;
    font-size: 14px;
  }

  /* 悬停购物车按钮 */
  .hover-add-to-cart {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    background: linear-gradient(transparent, rgba(0, 0, 0, 0.1));
    padding: 20px 12px 12px;
    transform: translateY(100%);
    transition: transform 0.3s ease;
    z-index: 5;
  }

  .product-card:hover .hover-add-to-cart {
    transform: translateY(0);
  }

  .hover-cart-form {
    margin: 0;
    padding: 0;
  }

  .hover-cart-btn {
    background: #ffffff;
    color: #424242;
    border: none;
    padding: 8px 16px;
    border-radius: 4px;
    font-size: 12px;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 6px;
    transition: all 0.3s ease;
    width: 100%;
    font-family: 'Hiragino Sans', 'Hiragino Kaku Gothic ProN', 'Yu Gothic', 'Meiryo', sans-serif;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }

  .hover-cart-btn:hover {
    background: #f5f5f5;
    transform: translateY(-1px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
  }

  .hover-cart-btn svg {
    width: 14px;
    height: 14px;
  }

  .mobile-cart-form {
    margin: 0;
    padding: 0;
  }

  .mobile-cart-btn {
    background: #333333;
    color: #ffffff;
    border: none;
    padding: 10px 16px;
    border-radius: 4px;
    font-size: 12px;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 6px;
    transition: all 0.3s ease;
    width: 100%;
    font-family: 'Hiragino Sans', 'Hiragino Kaku Gothic ProN', 'Yu Gothic', 'Meiryo', sans-serif;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }

  .mobile-cart-btn:hover {
    background: #555555;
    transform: translateY(-1px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
  }

  .mobile-cart-btn svg {
    width: 14px;
    height: 14px;
  }

  /* 商品信息 */
  .product-info {
    padding: {{ section.settings.card_padding }}px;
    text-align: center;
    width: 100%;
    box-sizing: border-box;
    flex-grow: 1;
    display: flex;
    flex-direction: column;
  }

  .product-title {
    font-size: {{ section.settings.product_title_size }}px;
    font-weight: {{ section.settings.product_title_weight }};
    margin-bottom: 8px;
    line-height: 1.3;
    height: auto;
    min-height: 36px;
    overflow: hidden;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    font-family: 'Hiragino Sans', 'Hiragino Kaku Gothic ProN', 'Yu Gothic', 'Meiryo', sans-serif;
    white-space: normal;
    word-wrap: break-word;
  }

  .product-title a {
    color: {{ section.settings.product_title_color }};
    text-decoration: none;
    transition: color 0.3s ease;
  }

  .product-title a:hover {
    color: {{ section.settings.product_title_hover_color }};
  }

  .product-price {
    font-size: {{ section.settings.product_price_size }}px;
    font-weight: {{ section.settings.product_price_weight }};
    color: {{ section.settings.product_price_color }};
    margin-top: auto;
  }

  .original-price {
    text-decoration: line-through;
    color: {{ section.settings.original_price_color }};
    margin-right: 6px;
    font-size: {{ section.settings.product_price_size | minus: 2 }}px;
  }

  .current-price {
    color: {{ section.settings.product_price_color }};
  }

  .view-more-container {
    margin-top: 30px;
  }

  .view-more-btn {
    display: inline-block;
    background: {{ section.settings.view_more_bg_color }};
    color: {{ section.settings.view_more_text_color }};
    padding: {{ section.settings.view_more_padding_y }}px {{ section.settings.view_more_padding_x }}px;
    border-radius: {{ section.settings.view_more_border_radius }}px;
    text-decoration: none;
    font-size: {{ section.settings.view_more_font_size }}px;
    transition: background 0.3s ease;
    font-family: 'Hiragino Sans', 'Hiragino Kaku Gothic ProN', 'Yu Gothic', 'Meiryo', sans-serif;
    border: {{ section.settings.view_more_border_width }}px solid {{ section.settings.view_more_border_color }};
  }

  .view-more-btn:hover {
    background: {{ section.settings.view_more_hover_bg_color }};
    color: {{ section.settings.view_more_hover_text_color }};
  }

  /* 心愿单应用容器 */
  #wishlist-app-container {
    display: none;
  }

  .wishlist-app-block {
    width: 100%;
  }

  /* 响应式设计 */
  @media (max-width: 768px) {
    .jewelry-products-container {
      padding: 30px 15px;
    }

    .section-title {
      font-size: {{ section.settings.title_size | minus: 4 }}px;
    }

    .section-title-wrapper {
      margin-bottom: 30px;
    }

    .tab-navigation-wrapper {
      margin-bottom: 25px;
    }

    .tab-navigation {
      gap: 12px;
      padding: 0 15px;
      justify-content: flex-start;
    }

    .tab-btn {
      padding: 6px 12px;
      font-size: {{ section.settings.tab_font_size | minus: 3 }}px;
    }

    .products-grid-container {
      padding: 0 20px;
    }

    .nav-arrow {
      display: none !important;
    }

    .products-grid {
      gap: {{ section.settings.product_gap | minus: 5 }}px;
    }

    .hover-add-to-cart {
      display: none !important;
    }

    .mobile-buttons-group {
      display: flex;
    }

    .wishlist-button-container {
      display: none;
    }

    .image-progress-bar {
      opacity: 1;
    }
  }

  @media (max-width: 480px) {
    .tab-navigation {
      gap: 8px;
      padding: 0 10px;
    }

    .tab-btn {
      padding: 5px 10px;
      font-size: {{ section.settings.tab_font_size | minus: 4 }}px;
    }

    .products-grid-container {
      padding: 0 15px;
    }

    .nav-arrow {
      display: none !important;
    }

    .products-grid {
      gap: 10px;
    }

    .product-title {
      font-size: {{ section.settings.product_title_size | minus: 2 }}px;
    }

    .product-price {
      font-size: {{ section.settings.product_price_size | minus: 2 }}px;
    }

    .hover-cart-btn {
      font-size: 11px;
      padding: 6px 12px;
    }

    .mobile-cart-btn {
      font-size: 11px;
      padding: 8px 14px;
    }

    .mobile-wishlist-btn {
      width: 36px;
      height: 36px;
    }
  }

  /* 空状态 */
  .no-products-message {
    text-align: center;
    padding: 60px 20px;
    color: #666;
    font-family: 'Hiragino Sans', 'Hiragino Kaku Gothic ProN', 'Yu Gothic', 'Meiryo', sans-serif;
    width: 100%;
    flex-shrink: 0;
    display: block;
    white-space: normal;
  }

  .no-products-message p {
    font-size: 16px;
    margin-bottom: 20px;
  }
</style>

<script>
  // TAB切换功能
  document.addEventListener('DOMContentLoaded', function() {
    const tabButtons = document.querySelectorAll('.tab-btn');
    const tabPanes = document.querySelectorAll('.tab-pane');
    
    // 确保默认激活第一个标签页
    if (tabButtons.length > 0 && tabPanes.length > 0) {
      // 移除所有active类
      tabButtons.forEach(btn => btn.classList.remove('active'));
      tabPanes.forEach(pane => pane.classList.remove('active'));
      
      // 激活第一个标签页
      tabButtons[0].classList.add('active');
      tabPanes[0].classList.add('active');
    }
    
    tabButtons.forEach(button => {
      button.addEventListener('click', function() {
        const tabId = this.dataset.tab;
        
        // 移除所有active类
        tabButtons.forEach(btn => btn.classList.remove('active'));
        tabPanes.forEach(pane => pane.classList.remove('active'));
        
        // 添加active类到当前选中的
        this.classList.add('active');
        const activePane = document.getElementById(`tab-${tabId}`);
        if (activePane) {
          activePane.classList.add('active');
          
          // 重置滑动位置
          const activeGrid = activePane.querySelector('.products-grid');
          if (activeGrid) {
            activeGrid.scrollLeft = 0;
            updateArrowStates(activeGrid);
          }
        }
      });
    });

    // 图片轮播功能
    initializeImageCarousel();

    // 心愿单功能
    initializeWishlist();

    // 添加到购物车功能 - 悬停按钮
    const hoverCartForms = document.querySelectorAll('.hover-cart-form');
    hoverCartForms.forEach(form => {
      form.addEventListener('submit', function(e) {
        e.preventDefault();
        e.stopPropagation();
        
        const formData = new FormData(this);
        const button = this.querySelector('.hover-cart-btn');
        const originalText = button.innerHTML;
        
        button.innerHTML = '追加中...';
        
        fetch('/cart/add.js', {
          method: 'POST',
          body: formData
        })
        .then(response => response.json())
        .then(data => {
          button.innerHTML = '追加完了！';
          setTimeout(() => {
            button.innerHTML = originalText;
          }, 2000);
        })
        .catch(error => {
          console.error('Error:', error);
          button.innerHTML = 'エラー';
          setTimeout(() => {
            button.innerHTML = originalText;
          }, 2000);
        });
      });
    });

    // 添加到购物车功能 - 手机端按钮
    const mobileCartForms = document.querySelectorAll('.mobile-cart-form');
    mobileCartForms.forEach(form => {
      form.addEventListener('submit', function(e) {
        e.preventDefault();
        e.stopPropagation();
        
        const formData = new FormData(this);
        const button = this.querySelector('.mobile-cart-btn');
        const originalText = button.innerHTML;
        
        button.innerHTML = '追加中...';
        
        fetch('/cart/add.js', {
          method: 'POST',
          body: formData
        })
        .then(response => response.json())
        .then(data => {
          button.innerHTML = '追加完了！';
          setTimeout(() => {
            button.innerHTML = originalText;
          }, 2000);
        })
        .catch(error => {
          console.error('Error:', error);
          button.innerHTML = 'エラー';
          setTimeout(() => {
            button.innerHTML = originalText;
          }, 2000);
        });
      });
    });

    // 初始化拖拽滑动功能
    initializeDragScroll();
    
    // 初始化所有箭头状态
    setTimeout(() => {
      const activeGrid = document.querySelector('.tab-pane.active .products-grid');
      if (activeGrid) {
        updateArrowStates(activeGrid);
      }

      // 为所有产品网格添加滚动监听
      const allGrids = document.querySelectorAll('.products-grid');
      allGrids.forEach(grid => {
        grid.addEventListener('scroll', function() {
          updateArrowStates(this);
        });
      });
    }, 100);
  });

  // 心愿单功能
  function initializeWishlist() {
    // 获取本地存储的心愿单数据
    function getWishlist() {
      try {
        return JSON.parse(localStorage.getItem('jewelry_wishlist') || '[]');
      } catch (e) {
        return [];
      }
    }

    // 保存心愿单数据到本地存储
    function saveWishlist(wishlist) {
      try {
        localStorage.setItem('jewelry_wishlist', JSON.stringify(wishlist));
        // 触发自定义事件，通知其他组件心愿单已更新
        window.dispatchEvent(new CustomEvent('wishlistUpdated', { detail: wishlist }));
      } catch (e) {
        console.error('Failed to save wishlist:', e);
      }
    }

    // 检查产品是否在心愿单中
    function isInWishlist(productId) {
      const wishlist = getWishlist();
      return wishlist.some(item => item.id == productId);
    }

    // 添加到心愿单
    function addToWishlist(productId, productHandle, productTitle, productImage, productPrice) {
      const wishlist = getWishlist();
      const existingIndex = wishlist.findIndex(item => item.id == productId);
      
      if (existingIndex === -1) {
        wishlist.push({
          id: productId,
          handle: productHandle,
          title: productTitle,
          image: productImage,
          price: productPrice,
          addedAt: new Date().toISOString()
        });
        saveWishlist(wishlist);
        return true;
      }
      return false;
    }

    // 从心愿单移除
    function removeFromWishlist(productId) {
      const wishlist = getWishlist();
      const filteredWishlist = wishlist.filter(item => item.id != productId);
      saveWishlist(filteredWishlist);
      return filteredWishlist.length !== wishlist.length;
    }

    // 更新按钮状态
    function updateWishlistButton(button, isActive) {
      if (isActive) {
        button.classList.add('active');
        button.setAttribute('aria-label', 'お気に入りから削除');
      } else {
        button.classList.remove('active');
        button.setAttribute('aria-label', 'お気に入りに追加');
      }
    }

    // 初始化所有心愿单按钮
    const wishlistButtons = document.querySelectorAll('.wishlist-btn, .mobile-wishlist-btn');
    wishlistButtons.forEach(button => {
      const productId = button.dataset.productId;
      const isActive = isInWishlist(productId);
      updateWishlistButton(button, isActive);

      button.addEventListener('click', function(e) {
        e.preventDefault();
        e.stopPropagation();

        const productId = this.dataset.productId;
        const productHandle = this.dataset.productHandle;
        const productCard = this.closest('.product-card');
        const productTitle = productCard.querySelector('.product-title a').textContent.trim();
        const productImage = productCard.querySelector('.product-image.active')?.src || '';
        const productPrice = productCard.querySelector('.current-price')?.textContent.trim() || '';

        const isCurrentlyActive = this.classList.contains('active');

        if (isCurrentlyActive) {
          // 从心愿单移除
          if (removeFromWishlist(productId)) {
            // 更新所有相同产品的按钮状态
            const allButtons = document.querySelectorAll(`[data-product-id="${productId}"]`);
            allButtons.forEach(btn => updateWishlistButton(btn, false));
            
            // 显示移除提示
            showWishlistNotification('お気に入りから削除しました', 'remove');
          }
        } else {
          // 添加到心愿单
          if (addToWishlist(productId, productHandle, productTitle, productImage, productPrice)) {
            // 更新所有相同产品的按钮状态
            const allButtons = document.querySelectorAll(`[data-product-id="${productId}"]`);
            allButtons.forEach(btn => updateWishlistButton(btn, true));
            
            // 显示添加提示
            showWishlistNotification('お気に入りに追加しました', 'add');
          }
        }
      });
    });

    // 显示心愿单操作提示
    function showWishlistNotification(message, type) {
      // 移除现有的通知
      const existingNotification = document.querySelector('.wishlist-notification');
      if (existingNotification) {
        existingNotification.remove();
      }

      // 创建新的通知
      const notification = document.createElement('div');
      notification.className = `wishlist-notification wishlist-notification-${type}`;
      notification.textContent = message;
      
      // 添加样式
      Object.assign(notification.style, {
        position: 'fixed',
        top: '20px',
        right: '20px',
        background: type === 'add' ? '#4CAF50' : '#f44336',
        color: 'white',
        padding: '12px 20px',
        borderRadius: '4px',
        fontSize: '14px',
        fontFamily: "'Hiragino Sans', 'Hiragino Kaku Gothic ProN', 'Yu Gothic', 'Meiryo', sans-serif",
        zIndex: '10000',
        boxShadow: '0 4px 12px rgba(0, 0, 0, 0.15)',
        transform: 'translateX(100%)',
        transition: 'transform 0.3s ease'
      });

      document.body.appendChild(notification);

      // 显示动画
      setTimeout(() => {
        notification.style.transform = 'translateX(0)';
      }, 10);

      // 自动隐藏
      setTimeout(() => {
        notification.style.transform = 'translateX(100%)';
        setTimeout(() => {
          if (notification.parentNode) {
            notification.parentNode.removeChild(notification);
          }
        }, 300);
      }, 3000);
    }

    // 监听心愿单更新事件（用于与第三方心愿单应用集成）
    window.addEventListener('wishlistUpdated', function(e) {
      // 这里可以添加与第三方心愿单应用的集成逻辑
      console.log('Wishlist updated:', e.detail);
    });
  }

  // 图片轮播功能
  function initializeImageCarousel() {
    const productCards = document.querySelectorAll('.product-card');
    
    productCards.forEach(card => {
      const images = card.querySelectorAll('.product-image');
      const progressDots = card.querySelectorAll('.progress-dot');
      
      if (images.length <= 1) return;
      
      let currentIndex = 0;
      let carouselInterval;
      
      // 鼠标进入开始轮播
      card.addEventListener('mouseenter', () => {
        startCarousel();
      });
      
      // 鼠标离开停止轮播并重置
      card.addEventListener('mouseleave', () => {
        stopCarousel();
        resetCarousel();
      });
      
      function startCarousel() {
        carouselInterval = setInterval(() => {
          currentIndex = (currentIndex + 1) % images.length;
          updateCarousel();
        }, 1500); // 每1.5秒切换一张图片
      }
      
      function stopCarousel() {
        if (carouselInterval) {
          clearInterval(carouselInterval);
          carouselInterval = null;
        }
      }
      
      function resetCarousel() {
        currentIndex = 0;
        updateCarousel();
      }
      
      function updateCarousel() {
        // 更新图片显示
        images.forEach((img, index) => {
          img.classList.toggle('active', index === currentIndex);
        });
        
        // 更新进度条
        progressDots.forEach((dot, index) => {
          dot.classList.toggle('active', index === currentIndex);
        });
      }
      
      // 初始化第一个进度点
      if (progressDots.length > 0) {
        progressDots[0].classList.add('active');
      }
    });
  }

  // 初始化拖拽滑动功能
  function initializeDragScroll() {
    const grids = document.querySelectorAll('.products-grid');
    
    grids.forEach(grid => {
      let isDown = false;
      let startX;
      let scrollLeft;
      let isDragging = false;
      let hasMoved = false;

      // 鼠标事件 - 优化拖拽体验
      grid.addEventListener('mousedown', (e) => {
        // 如果点击的是链接或按钮，不启动拖拽
        if (e.target.closest('a, button, input')) {
          return;
        }
        
        isDown = true;
        isDragging = false;
        hasMoved = false;
        startX = e.pageX;
        scrollLeft = grid.scrollLeft;
        grid.classList.add('dragging');
        grid.style.scrollBehavior = 'auto'; // 拖拽时禁用平滑滚动
        e.preventDefault();
      });

      // 全局监听鼠标移动和释放
      document.addEventListener('mousemove', (e) => {
        if (!isDown) return;
        e.preventDefault();
        
        const x = e.pageX;
        const walk = (x - startX) * 2; // 调整拖拽灵敏度
        
        // 设置拖拽阈值
        if (Math.abs(walk) > 3) {
          isDragging = true;
          hasMoved = true;
        }
        
        grid.scrollLeft = scrollLeft - walk;
        updateArrowStates(grid);
      });

      document.addEventListener('mouseup', (e) => {
        if (!isDown) return;
        
        isDown = false;
        grid.classList.remove('dragging');
        grid.style.scrollBehavior = 'smooth'; // 恢复平滑滚动
        
        // 如果发生了拖拽，阻止点击事件
        if (isDragging || hasMoved) {
          e.preventDefault();
          e.stopPropagation();
        }
        
        setTimeout(() => {
          isDragging = false;
          hasMoved = false;
        }, 100);
      });

      // 触摸事件
      let touchStartX = 0;
      let touchScrollLeft = 0;
      let isTouchDragging = false;

      grid.addEventListener('touchstart', (e) => {
        touchStartX = e.touches[0].clientX;
        touchScrollLeft = grid.scrollLeft;
        isTouchDragging = false;
        grid.style.scrollBehavior = 'auto';
      }, { passive: true });

      grid.addEventListener('touchmove', (e) => {
        if (!touchStartX) return;
        
        const touchX = e.touches[0].clientX;
        const diff = touchStartX - touchX;
        
        if (Math.abs(diff) > 5) {
          isTouchDragging = true;
          grid.classList.add('dragging');
        }
        
        grid.scrollLeft = touchScrollLeft + diff;
        updateArrowStates(grid);
      }, { passive: true });

      grid.addEventListener('touchend', () => {
        touchStartX = 0;
        grid.classList.remove('dragging');
        grid.style.scrollBehavior = 'smooth';
        
        setTimeout(() => {
          isTouchDragging = false;
        }, 100);
        
        updateArrowStates(grid);
      });

      // 阻止拖拽时的链接点击
      grid.addEventListener('click', (e) => {
        if (isDragging || isTouchDragging || hasMoved) {
          e.preventDefault();
          e.stopPropagation();
          return false;
        }
      }, true);

      // 滚动事件监听
      grid.addEventListener('scroll', () => {
        updateArrowStates(grid);
      });
    });
  }

  // 滑动产品功能 - 优化后的滑动逻辑
  function slideProducts(direction) {
    const activeGrid = document.querySelector('.tab-pane.active .products-grid');
    if (!activeGrid) return;
    
    const cardWidth = {{ section.settings.card_width }}; // 卡片宽度
    const gap = {{ section.settings.product_gap }}; // 间距
    const scrollAmount = (cardWidth + gap) * 2; // 每次滑动2个产品的距离
    
    if (direction === 'left') {
      activeGrid.scrollLeft = Math.max(0, activeGrid.scrollLeft - scrollAmount);
    } else {
      const maxScroll = activeGrid.scrollWidth - activeGrid.clientWidth;
      activeGrid.scrollLeft = Math.min(maxScroll, activeGrid.scrollLeft + scrollAmount);
    }
    
    // 延迟更新箭头状态，等待滚动完成
    setTimeout(() => {
      updateArrowStates(activeGrid);
    }, 300);
  }

  // 更新箭头状态
  function updateArrowStates(grid) {
    const leftArrow = document.querySelector('.nav-arrow-left');
    const rightArrow = document.querySelector('.nav-arrow-right');
    
    if (!leftArrow || !rightArrow || !grid) return;
    
    const isAtStart = grid.scrollLeft <= 5;
    const isAtEnd = grid.scrollLeft >= (grid.scrollWidth - grid.clientWidth - 5);
    
    leftArrow.disabled = isAtStart;
    rightArrow.disabled = isAtEnd;
    
    // 箭头始终显示，不隐藏
    leftArrow.style.display = 'flex';
    rightArrow.style.display = 'flex';
    leftArrow.style.visibility = 'visible';
    rightArrow.style.visibility = 'visible';
  }
</script>

{% schema %}
{
  "name": "珠宝产品展示（含心愿单）",
  "class": "section-jewelry-products-wishlist",
  "settings": [
    {
      "type": "header",
      "content": "基本设置"
    },
    {
      "type": "text",
      "id": "section_title",
      "label": "标题",
      "default": "Featured Collections"
    },
    {
      "type": "range",
      "id": "container_width",
      "min": 800,
      "max": 1600,
      "step": 50,
      "unit": "px",
      "label": "容器最大宽度",
      "default": 1200
    },
    {
      "type": "range",
      "id": "section_padding_top",
      "min": 0,
      "max": 100,
      "step": 5,
      "unit": "px",
      "label": "顶部间距",
      "default": 40
    },
    {
      "type": "range",
      "id": "section_padding_bottom",
      "min": 0,
      "max": 100,
      "step": 5,
      "unit": "px",
      "label": "底部间距",
      "default": 40
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "背景颜色",
      "default": "#ffffff"
    },
    {
      "type": "header",
      "content": "系列设置"
    },
    {
      "type": "range",
      "id": "max_collections",
      "min": 3,
      "max": 15,
      "step": 1,
      "label": "最多显示系列数量",
      "default": 8
    },
    {
      "type": "range",
      "id": "products_per_collection",
      "min": 4,
      "max": 20,
      "step": 1,
      "label": "每个系列显示产品数量",
      "default": 8
    },
    {
      "type": "select",
      "id": "sort_by",
      "label": "系列排序方式",
      "options": [
        { "value": "title", "label": "按标题排序" },
        { "value": "created_at", "label": "按创建时间排序" },
        { "value": "updated_at", "label": "按更新时间排序" },
        { "value": "products_count", "label": "按产品数量排序" }
      ],
      "default": "title"
    },
    {
      "type": "checkbox",
      "id": "exclude_all_collection",
      "label": "排除'全部产品'系列",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_add_to_cart",
      "label": "显示添加到购物车按钮",
      "default": true
    },
    {
      "type": "text",
      "id": "add_to_cart_text",
      "label": "添加到购物车按钮文字",
      "default": "カートに追加"
    },
    {
      "type": "header",
      "content": "心愿单设置"
    },
    {
      "type": "checkbox",
      "id": "show_wishlist",
      "label": "显示心愿单按钮",
      "default": true
    },
    {
      "type": "range",
      "id": "wishlist_opacity",
      "min": 60,
      "max": 100,
      "step": 5,
      "unit": "%",
      "label": "心愿单按钮透明度",
      "default": 90
    },
    {
      "type": "color",
      "id": "wishlist_bg_color",
      "label": "心愿单按钮背景色",
      "default": "rgba(255, 255, 255, 0.9)"
    },
    {
      "type": "color",
      "id": "wishlist_icon_color",
      "label": "心愿单图标颜色",
      "default": "#666666"
    },
    {
      "type": "color",
      "id": "wishlist_border_color",
      "label": "心愿单按钮边框颜色",
      "default": "#dddddd"
    },
    {
      "type": "color",
      "id": "wishlist_hover_bg_color",
      "label": "心愿单按钮悬停背景色",
      "default": "rgba(255, 255, 255, 1)"
    },
    {
      "type": "color",
      "id": "wishlist_hover_icon_color",
      "label": "心愿单图标悬停颜色",
      "default": "#ff6b6b"
    },
    {
      "type": "color",
      "id": "wishlist_hover_border_color",
      "label": "心愿单按钮悬停边框颜色",
      "default": "#ff6b6b"
    },
    {
      "type": "color",
      "id": "wishlist_active_bg_color",
      "label": "心愿单按钮激活背景色",
      "default": "#ff6b6b"
    },
    {
      "type": "color",
      "id": "wishlist_active_icon_color",
      "label": "心愿单图标激活颜色",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "wishlist_active_border_color",
      "label": "心愿单按钮激活边框颜色",
      "default": "#ff6b6b"
    },
    {
      "type": "header",
      "content": "标题样式"
    },
    {
      "type": "range",
      "id": "title_size",
      "min": 16,
      "max": 48,
      "step": 2,
      "unit": "px",
      "label": "标题字体大小",
      "default": 28
    },
    {
      "type": "select",
      "id": "title_weight",
      "label": "标题字体粗细",
      "options": [
        { "value": "300", "label": "细体" },
        { "value": "400", "label": "正常" },
        { "value": "500", "label": "中等" },
        { "value": "600", "label": "半粗" },
        { "value": "700", "label": "粗体" }
      ],
      "default": "300"
    },
    {
      "type": "color",
      "id": "title_color",
      "label": "标题颜色",
      "default": "#333333"
    },
    {
      "type": "range",
      "id": "underline_width",
      "min": 30,
      "max": 120,
      "step": 5,
      "unit": "px",
      "label": "下划线宽度",
      "default": 60
    },
    {
      "type": "range",
      "id": "underline_height",
      "min": 1,
      "max": 5,
      "step": 1,
      "unit": "px",
      "label": "下划线高度",
      "default": 2
    },
    {
      "type": "color",
      "id": "underline_color",
      "label": "下划线颜色",
      "default": "#D9D9D9"
    },
    {
      "type": "header",
      "content": "TAB标签样式"
    },
    {
      "type": "range",
      "id": "tab_font_size",
      "min": 12,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "TAB字体大小",
      "default": 16
    },
    {
      "type": "range",
      "id": "tab_border_radius",
      "min": 0,
      "max": 50,
      "step": 5,
      "unit": "px",
      "label": "TAB圆角",
      "default": 25
    },
    {
      "type": "range",
      "id": "tab_border_width",
      "min": 0,
      "max": 3,
      "step": 1,
      "unit": "px",
      "label": "TAB边框宽度",
      "default": 0
    },
    {
      "type": "color",
      "id": "tab_bg_color",
      "label": "TAB背景色",
      "default": "transparent"
    },
    {
      "type": "color",
      "id": "tab_text_color",
      "label": "TAB文字颜色",
      "default": "#666666"
    },
    {
      "type": "color",
      "id": "tab_border_color",
      "label": "TAB边框颜色",
      "default": "#dddddd"
    },
    {
      "type": "color",
      "id": "tab_hover_bg_color",
      "label": "TAB悬停背景色",
      "default": "#F5F5F5"
    },
    {
      "type": "color",
      "id": "tab_hover_text_color",
      "label": "TAB悬停文字颜色",
      "default": "#333333"
    },
    {
      "type": "color",
      "id": "tab_active_bg_color",
      "label": "TAB激活背景色",
      "default": "#F5F5F5"
    },
    {
      "type": "color",
      "id": "tab_active_text_color",
      "label": "TAB激活文字颜色",
      "default": "#333333"
    },
    {
      "type": "header",
      "content": "产品卡片样式"
    },
    {
      "type": "range",
      "id": "card_width",
      "min": 150,
      "max": 300,
      "step": 10,
      "unit": "px",
      "label": "卡片宽度",
      "default": 190
    },
    {
      "type": "range",
      "id": "product_gap",
      "min": 10,
      "max": 40,
      "step": 5,
      "unit": "px",
      "label": "产品间距",
      "default": 20
    },
    {
      "type": "range",
      "id": "card_border_radius",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "卡片圆角",
      "default": 8
    },
    {
      "type": "range",
      "id": "card_border_width",
      "min": 0,
      "max": 3,
      "step": 1,
      "unit": "px",
      "label": "卡片边框宽度",
      "default": 0
    },
    {
      "type": "color",
      "id": "card_bg_color",
      "label": "卡片背景色",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "card_border_color",
      "label": "卡片边框颜色",
      "default": "#dddddd"
    },
    {
      "type": "text",
      "id": "card_shadow",
      "label": "卡片阴影",
      "default": "0 2px 6px rgba(0,0,0,0.1)"
    },
    {
      "type": "text",
      "id": "card_hover_shadow",
      "label": "卡片悬停阴影",
      "default": "0 4px 12px rgba(0,0,0,0.15)"
    },
    {
      "type": "range",
      "id": "card_hover_lift",
      "min": 0,
      "max": 10,
      "step": 1,
      "unit": "px",
      "label": "悬停上移距离",
      "default": 2
    },
    {
      "type": "range",
      "id": "card_padding",
      "min": 8,
      "max": 24,
      "step": 2,
      "unit": "px",
      "label": "卡片内边距",
      "default": 12
    },
    {
      "type": "header",
      "content": "产品信息样式"
    },
    {
      "type": "range",
      "id": "product_title_size",
      "min": 12,
      "max": 18,
      "step": 1,
      "unit": "px",
      "label": "产品标题字体大小",
      "default": 14
    },
    {
      "type": "select",
      "id": "product_title_weight",
      "label": "产品标题字体粗细",
      "options": [
        { "value": "400", "label": "正常" },
        { "value": "500", "label": "中等" },
        { "value": "600", "label": "半粗" }
      ],
      "default": "500"
    },
    {
      "type": "color",
      "id": "product_title_color",
      "label": "产品标题颜色",
      "default": "#333333"
    },
    {
      "type": "color",
      "id": "product_title_hover_color",
      "label": "产品标题悬停颜色",
      "default": "#333333"
    },
    {
      "type": "range",
      "id": "product_price_size",
      "min": 12,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "价格字体大小",
      "default": 16
    },
    {
      "type": "select",
      "id": "product_price_weight",
      "label": "价格字体粗细",
      "options": [
        { "value": "400", "label": "正常" },
        { "value": "500", "label": "中等" },
        { "value": "600", "label": "半粗" },
        { "value": "700", "label": "粗体" }
      ],
      "default": "600"
    },
    {
      "type": "color",
      "id": "product_price_color",
      "label": "价格颜色",
      "default": "#333333"
    },
    {
      "type": "color",
      "id": "original_price_color",
      "label": "原价颜色",
      "default": "#999999"
    },
    {
      "type": "header",
      "content": "查看更多按钮"
    },
    {
      "type": "checkbox",
      "id": "show_view_more",
      "label": "显示查看更多按钮",
      "default": true
    },
    {
      "type": "text",
      "id": "view_more_text",
      "label": "查看更多按钮文字",
      "default": "もっと見る"
    },
    {
      "type": "url",
      "id": "view_more_url",
      "label": "查看更多链接",
      "default": "/collections"
    },
    {
      "type": "range",
      "id": "view_more_font_size",
      "min": 12,
      "max": 18,
      "step": 1,
      "unit": "px",
      "label": "查看更多字体大小",
      "default": 14
    },
    {
      "type": "range",
      "id": "view_more_padding_x",
      "min": 20,
      "max": 40,
      "step": 5,
      "unit": "px",
      "label": "查看更多水平内边距",
      "default": 30
    },
    {
      "type": "range",
      "id": "view_more_padding_y",
      "min": 8,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "查看更多垂直内边距",
      "default": 12
    },
    {
      "type": "range",
      "id": "view_more_border_radius",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "查看更多圆角",
      "default": 4
    },
    {
      "type": "range",
      "id": "view_more_border_width",
      "min": 0,
      "max": 3,
      "step": 1,
      "unit": "px",
      "label": "查看更多边框宽度",
      "default": 0
    },
    {
      "type": "color",
      "id": "view_more_bg_color",
      "label": "查看更多背景色",
      "default": "#333333"
    },
    {
      "type": "color",
      "id": "view_more_text_color",
      "label": "查看更多文字颜色",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "view_more_border_color",
      "label": "查看更多边框颜色",
      "default": "#333333"
    },
    {
      "type": "color",
      "id": "view_more_hover_bg_color",
      "label": "查看更多悬停背景色",
      "default": "#555555"
    },
    {
      "type": "color",
      "id": "view_more_hover_text_color",
      "label": "查看更多悬停文字颜色",
      "default": "#ffffff"
    }
  ],
  "blocks": [
    {
      "type": "wishlist_app",
      "name": "心愿单应用",
      "settings": [
        {
          "type": "paragraph",
          "content": "在此处添加心愿单应用的嵌入代码或配置"
        },
        {
          "type": "liquid",
          "id": "app_embed",
          "label": "应用嵌入代码",
          "info": "粘贴心愿单应用提供的嵌入代码"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "珠宝产品展示（含心愿单）",
      "category": "Product",
      "blocks": [
        {
          "type": "wishlist_app"
        }
      ]
    }
  ]
}
{% endschema %}
