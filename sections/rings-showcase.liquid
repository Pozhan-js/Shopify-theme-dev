<!-- 戒指展示模块 - 后台可编辑版 -->
<div class="rings-showcase-container">
  <div class="rings-showcase-wrapper">
    <!-- 左侧模特图 -->
    <div class="rings-model-image-section" id="ringsModelSection">
      {% if section.settings.modelimage %}
        <img
          src="{{ section.settings.modelimage | image_url: width: 800, height: 1200, crop: 'center' }}"
          alt="{{ section.settings.modelimagealt | default: '戒指模特展示' }}"
          class="rings-model-image"
          loading="lazy"
        >
      {% else %}
        <div class="rings-model-placeholder" style="background: {{ section.settings.placeholdercolor }};"></div>
      {% endif %}
    </div>

    <!-- 右侧商品列表 -->
    <div class="rings-products-section" id="ringsProductsSection">
      <div class="rings-products-container">
        <div class="rings-products-grid">
          {%- assign selected_collection = collections[section.settings.collection_handle] -%}
          {%- if selected_collection and selected_collection.products.size > 0 -%}
            {%- assign collection_products = selected_collection.products -%}
            {%- assign product_count = collection_products.size -%}

            {%- for product in collection_products limit: section.settings.maxproducts -%}
              <div class="rings-product-card">
                <div class="product-image-container" data-product-id="{{ product.id }}">
                  <a href="{{ product.url }}" class="product-link">
                    {%- if product.images.size > 0 -%}
                      {%- for image in product.images limit: 5 -%}
                        <img
                          src="{{ image | image_url: width: 300, height: 300, crop: 'center' }}"
                          alt="{{ product.title }} - 图片 {{ forloop.index }}"
                          class="product-image {% if forloop.first %}active{% endif %}"
                          data-image-index="{{ forloop.index0 }}"
                          loading="lazy"
                        >
                      {%- endfor -%}
                      {%- if product.images.size > 1 -%}
                        <div class="progress-bar-container">
                          <div class="progress-bar"></div>
                        </div>
                      {%- endif -%}
                    {%- else -%}
                      <div class="product-image-placeholder">暂无图片</div>
                    {%- endif -%}
                  </a>

                  <form method="post" action="/cart/add" class="add-to-cart-form">
                    <input type="hidden" name="id" value="{{ product.variants.first.id }}">
                    <input type="hidden" name="quantity" value="1">
                    <button type="submit" class="add-to-cart-btn">
                      <svg width="16" height="16" viewBox="0 0 24 24" fill="none">
                        <path d="M9 2L6 6H3L5 20H19L21 6H18L15 2H9Z" stroke="currentColor" stroke-width="2"/>
                      </svg>
                      {{ section.settings.addtocarttext | default: 'カートに追加' }}
                    </button>
                  </form>
                </div>

                <div class="product-info">
                  <h3 class="product-title">
                    <a href="{{ product.url }}">{{ product.title }}</a>
                  </h3>
                  <div class="product-price-container">
                    <div class="product-price">
                      {%- if product.compare_at_price > product.price -%}
                        <span class="original-price">{{ product.compare_at_price | money }}</span>
                      {%- endif -%}
                      <span class="current-price">{{ product.price | money }}</span>
                    </div>
                    {%- if section.settings.show_product_tags and product.tags.size > 0 -%}
                      <div class="product-tags">
                        {%- for tag in product.tags limit: section.settings.max_tags_display -%}
                          {%- assign tag_lower = tag | downcase -%}
                          {%- assign show_tag = false -%}

                          {%- comment -%} 检查是否在允许显示的标签列表中 {%- endcomment -%}
                          {%- if section.settings.allowed_tags != blank -%}
                            {%- assign allowed_tags_array = section.settings.allowed_tags | split: ',' -%}
                            {%- for allowed_tag in allowed_tags_array -%}
                              {%- assign allowed_tag_clean = allowed_tag | strip | downcase -%}
                              {%- if tag_lower == allowed_tag_clean -%}
                                {%- assign show_tag = true -%}
                                {%- break -%}
                              {%- endif -%}
                            {%- endfor -%}
                          {%- else -%}
                            {%- comment -%} 如果没有设置允许的标签，显示所有标签 {%- endcomment -%}
                            {%- assign show_tag = true -%}
                          {%- endif -%}

                          {%- if show_tag -%}
                            <span class="product-tag">{{ tag }}</span>
                          {%- endif -%}
                        {%- endfor -%}
                      </div>
                    {%- endif -%}
                  </div>
                </div>
              </div>
            {%- endfor -%}
          {%- else -%}
            <div class="rings-no-products-message">
              <p>{{ section.settings.emptymessage | default: '暂无商品，请在后台添加产品或选择正确的系列' }}</p>
            </div>
          {%- endif -%}
        </div>
      </div>
    </div>
  </div>
</div>

<style>
  .rings-showcase-container {
    width: 100%;
    margin: {{ section.settings.topmargin }}px 0 {{ section.settings.bottommargin }}px 0;
    padding: 0;
    position: relative;
    background: {{ section.settings.backgroundcolor }};
  }

  .rings-showcase-wrapper {
    display: flex;
    flex-direction: row;
    align-items: flex-start;
  }

    /* 左侧模特图 */
    .rings-model-image-section {
        flex: 1;
        position: relative;
        height: 600px;
        overflow: hidden;
        z-index: 2;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 40px 20px;
    }

    .rings-model-image-section.sticky {
        position: fixed;
        top: 50%;
        left: 0;
        width: 50vw;
        height: 600px;
        transform: translateY(-50%);
    }

    .rings-model-image-section.sticky-end {
        position: absolute;
        bottom: 0;
        left: 0;
        width: 50vw;
        height: 600px;
        transform: none;
    }

    .rings-model-image, .rings-model-placeholder {
        width: 100%;
        height: 100%;
        max-width: none;
        max-height: none;
        object-fit: cover;
        object-position: center;
        border-radius: 12px;
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
    }

    .rings-model-placeholder {
        background: {{ section.settings.placeholdercolor }};
        display: flex;
        align-items: center;
        justify-content: center;
        color: #999;
        font-size: 18px;
        aspect-ratio: 3/4;
        min-height: 400px;
    }

  /* 右侧商品列表 */
  .rings-products-section {
    flex: 1;
    background: transparent;
    position: relative;
    z-index: 2;
  }

  .rings-products-section.offset {
    margin-left: 50%;
  }

    .rings-products-container {
        padding: 40px 40px 60px 40px;
        max-width: 600px;
        margin: 0 auto;
        display: flex;
        flex-direction: column;
        justify-content: center;
    }

    /* 桌面端：两列展示 */
    .rings-products-grid {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        gap: 25px;
        margin-bottom: 40px;
        align-items: start;
    }

  .rings-product-card {
    background: transparent;
    border-radius: 8px;
    overflow: hidden;
    transition: transform 0.3s ease;
    display: flex;
    flex-direction: column;
    gap: 15px;
  }

  .rings-product-card:hover {
    transform: translateY(-3px);
  }

  .product-image-container {
    position: relative;
    width: 100%;
    aspect-ratio: 1;
    overflow: hidden;
    border-radius: 8px;
    background: #f5f5f5;
  }

  .product-link {
    display: block;
    width: 100%;
    height: 100%;
    position: relative;
  }

  .product-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    position: absolute;
    top: 0;
    left: 0;
    opacity: 0;
    transition: opacity 0.3s ease, transform 0.3s ease;
  }

  .product-image.active {
    opacity: 1;
  }

  .product-image-placeholder {
    width: 100%;
    height: 100%;
    background: linear-gradient(135deg, #f0f0f0 0%, #e0e0e0 100%);
    display: flex;
    align-items: center;
    justify-content: center;
    color: #999;
    font-size: 12px;
  }

  .rings-product-card:hover .product-image.active {
    transform: scale(1.05);
  }

  /* 轮播进度条 */
  .progress-bar-container {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 3px;
    background: rgba(255, 255, 255, 0.3);
    z-index: 2;
    overflow: hidden;
  }

  .progress-bar {
    height: 100%;
    background: rgba(255, 255, 255, 0.9);
    width: 0%;
    transition: width 0.1s linear;
  }

  .rings-product-card .product-info {
    padding: 0;
    text-align: left;
  }

  .rings-product-card .product-title {
    font-size: {{ section.settings.producttitlesize | default: 14 }}px;
    font-weight: 500;
    margin-bottom: 8px;
    line-height: 1.4;
    overflow: hidden;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    color: {{ section.settings.producttitlecolor | default: '#333' }};
  }

  .rings-product-card .product-title a {
    color: inherit;
    text-decoration: none;
    transition: color 0.3s ease;
  }

  .rings-product-card .product-title a:hover {
    color: {{ section.settings.producttitlehovercolor | default: '#666' }};
  }

  /* 价格容器 - 使用 flexbox 布局 */
  .rings-product-card .product-price-container {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    margin-bottom: 12px;
    gap: 8px;
  }

  .rings-product-card .product-price {
    font-size: {{ section.settings.productpricesize | default: 16 }}px;
    font-weight: 600;
    color: {{ section.settings.productpricecolor | default: '#333' }};
    text-align: left;
    flex: 1;
  }

  .rings-product-card .original-price {
    text-decoration: line-through;
    color: {{ section.settings.originalpricecolor | default: '#999' }};
    margin-right: 8px;
    font-size: {{ section.settings.productpricesize | default: 16 | minus: 2 }}px;
  }

  .rings-product-card .current-price {
    color: {{ section.settings.productpricecolor | default: '#333' }};
  }

  /* 产品标签容器样式 */
  .rings-product-card .product-tags {
      display: flex;
    flex-wrap: wrap;
    gap: 4px;
    justify-content: flex-end;
    align-items: center;
    flex: 1;
    min-width: 0;
  }

  /* 产品标签样式 */
  .rings-product-card .product-tag {
    background: #f0f0f0;
    color: #666666;
    font-size: 10px;
    font-weight: 500;
    padding: 3px 6px;
    border-radius: 8px;
    border: 0px solid #dddddd;
    white-space: nowrap;
    font-family: 'Hiragino Sans', 'Hiragino Kaku Gothic ProN', 'Yu Gothic', 'Meiryo', sans-serif;
    transition: all 0.3s ease;
    line-height: 1;
    display: inline-block;
    max-width: 100%;
    overflow: hidden;
    text-overflow: ellipsis;
    cursor: pointer;
  }

  .rings-product-card .product-tag :hover {
    background: #e0e0e0;
    color: #333333;
    transform: translateY(-1px);
  }

  .rings-product-card .add-to-cart-form {
    position: absolute;
    bottom: 12px;
    left: 12px;
    right: 12px;
    margin: 0;
    opacity: 0;
    transform: translateY(10px);
    transition: all 0.3s ease;
    z-index: 3;
  }

  .rings-product-card:hover .add-to-cart-form {
    opacity: 1;
    transform: translateY(0);
  }

  .rings-product-card .add-to-cart-btn {
    background: {{ section.settings.buttonbgcolor | default: 'rgba(255, 255, 255, 0.95)' }};
    color: {{ section.settings.buttontextcolor | default: '#333' }};
    border: 1px solid {{ section.settings.buttonbordercolor | default: 'rgba(255, 255, 255, 0.8)' }};
    padding: 8px 16px;
    border-radius: {{ section.settings.buttonborderradius | default: 4 }}px;
    font-size: 12px;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 4px;
    transition: all 0.3s ease;
    width: 100%;
    backdrop-filter: blur(10px);
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  }

  .rings-product-card .add-to-cart-btn:hover {
    background: {{ section.settings.buttonhovercolor | default: 'rgba(255, 255, 255, 1)' }};
    border-color: {{ section.settings.buttonbordercolor | default: 'rgba(255, 255, 255, 1)' }};
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  }

  .rings-no-products-message {
    text-align: center;
    padding: 60px 20px;
    color: #666;
    grid-column: 1 / -1;
  }

  .rings-no-products-message p {
    font-size: 16px;
    margin: 0;
  }

  /* 响应式设计 */
  @media screen and (max-width: 749px) {
    .rings-showcase-wrapper {
      flex-direction: column;
    }

        .rings-model-image-section {
            position: relative !important;
            height: auto;
            max-height: 50vh;
            flex: none;
            width: 100% !important;
            overflow: hidden;
            padding: 20px;
            transform: none !important;
        }

        .rings-model-image-section.sticky,
        .rings-model-image-section.sticky-end {
            position: relative !important;
            width: 100% !important;
            margin-left: 0 !important;
            transform: none !important;
            top: auto !important;
        }

        /* 移动端模特图片只显示中间部分 - 禁用所有变换和过渡 */
        .rings-model-image {
            width: 100%;
            height: auto;
            max-height: 40vh;
            object-fit: cover;
            object-position: center center;
            transform: none !important;
            transition: none !important;
            border-radius: 8px;
        }

        /* 移动端禁用悬停效果 */
        .rings-product-card:hover .product-image.active {
            transform: none !important;
        }

        .rings-model-placeholder {
            transform: none !important;
            transition: none !important;
            min-height: 300px;
            aspect-ratio: 3/4;
        }

    .rings-products-section {
      flex: none;
      margin-left: 0 !important;
      width: 100%;
    }

    .rings-products-container {
      padding: 40px 20px;
    }

    /* 手机端：横向排列 */
    .rings-products-grid {
      display: flex;
      flex-direction: row;
      overflow-x: auto;
      gap: 20px;
      margin-bottom: 40px;
      padding-bottom: 10px;
    }

    .rings-product-card {
      flex: 0 0 150px;
      min-width: 150px;
      flex-direction: column;
      gap: 10px;
    }

    .rings-product-card .product-image-container {
      width: 150px;
      height: 150px;
    }

    .rings-product-card .product-info {
      padding: 0;
      width: 100%;
    }

    .rings-product-card .product-title {
      font-size: 12px;
    }

    /* 移动端价格容器调整 */
    .rings-product-card .product-price-container {
      flex-direction: column;
      align-items: flex-start;
      gap: 4px;
    }

    .rings-product-card .product-tags {
      align-items: flex-start;
      flex-direction: row;
      flex-wrap: wrap;
    }

    .rings-product-card .add-to-cart-form {
      position: static;
      opacity: 1;
      transform: none;
      margin-top: 8px;
    }

    .rings-product-card .add-to-cart-btn {
      background: {{ section.settings.buttonbgcolor | default: 'rgba(255, 255, 255, 0.95)' }};
      color: {{ section.settings.buttontextcolor | default: '#333' }};
      border: 1px solid {{ section.settings.buttonbordercolor | default: 'rgba(255, 255, 255, 0.8)' }};
      backdrop-filter: none;
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    }

    .rings-products-grid::-webkit-scrollbar {
      height: 4px;
    }

    .rings-products-grid::-webkit-scrollbar-track {
      background: #f1f1f1;
      border-radius: 2px;
    }

    .rings-products-grid::-webkit-scrollbar-thumb {
      background: #ccc;
      border-radius: 2px;
    }

    .rings-products-grid::-webkit-scrollbar-thumb:hover {
      background: #999;
    }

    /* 移动端隐藏进度条 */
    .progress-bar-container {
      display: none;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    // 检查是否为移动端
    function isMobile() {
      return window.innerWidth <= 749;
    }

    // 图片轮播功能
    function initImageCarousel() {
      const productCards = document.querySelectorAll('.rings-product-card');

      productCards.forEach((card) => {
        const imageContainer = card.querySelector('.product-image-container');
        const images = imageContainer.querySelectorAll('.product-image');
        const progressBar = imageContainer.querySelector('.progress-bar');

        if (images.length <= 1) return; // 如果只有一张图片，不需要轮播

        let currentIndex = 0;
        let hoverInterval;
        let progressInterval;
        let isHovering = false;
        let progress = 0;
        const intervalDuration = 800; // 每张图片显示时间
        const progressStep = 100 / (intervalDuration / 10); // 每10ms增加的进度

        // 显示指定索引的图片
        function showImage(index) {
          images.forEach((img, i) => {
            img.classList.toggle('active', i === index);
          });
          currentIndex = index;
          // 重置进度条
          progress = 0;
          if (progressBar) {
            progressBar.style.width = '0%';
          }
        }

        // 更新进度条
        function updateProgress() {
          if (progressBar && isHovering) {
            progress += progressStep;
            progressBar.style.width = Math.min(progress, 100) + '%';
          }
        }

        // 自动轮播到下一张
        function nextImage() {
          const nextIndex = (currentIndex + 1) % images.length;
          showImage(nextIndex);
        }

        // 鼠标悬停开始轮播
        imageContainer.addEventListener('mouseenter', function () {
          if (isMobile()) return; // 移动端不启用轮播

          isHovering = true;
          progress = 0;

          // 立即显示下一张图片
          if (images.length > 1) {
            nextImage();

            // 设置轮播定时器
            hoverInterval = setInterval(nextImage, intervalDuration);

            // 设置进度条更新定时器
            progressInterval = setInterval(updateProgress, 10);
          }
        });

        // 鼠标离开停止轮播并回到第一张
        imageContainer.addEventListener('mouseleave', function () {
          if (isMobile()) return;

          isHovering = false;
          clearInterval(hoverInterval);
          clearInterval(progressInterval);

          // 回到第一张图片并重置进度条
          setTimeout(() => {
            if (!isHovering) {
              showImage(0);
            }
          }, 200);
        });
      });
    }

    // 滚动固定功能（桌面端）
    function initScrollSticky() {
      if (isMobile()) return;

      const modelSection = document.getElementById('ringsModelSection');
      const productsSection = document.getElementById('ringsProductsSection');
      const container = document.querySelector('.rings-showcase-container');

      if (!modelSection || !productsSection || !container) return;

      let currentState = 'normal';

      function updateStickyState() {
        const scrollTop = window.pageYOffset;
        const windowHeight = window.innerHeight;

        // 获取容器的实际位置信息
        const containerRect = container.getBoundingClientRect();
        const containerTop = containerRect.top + scrollTop;

        // 获取模特图片区域的实际位置信息
        const modelRect = modelSection.getBoundingClientRect();
        const modelTop = containerTop; // 模特图片从容器顶部开始
        const modelHeight = 600; // 固定高度

        // 获取商品区域的位置信息
        const productsRect = productsSection.getBoundingClientRect();
        const productsTop = containerTop; // 商品区域也从容器顶部开始
        const productsHeight = productsSection.offsetHeight;

        // 关键修复：计算模特图片的实际中心位置
        // 模特图片的中心点 = 模特图片顶部 + 模特图片高度的一半
        const modelImageCenter = modelTop + modelHeight / 2;

        // 屏幕中心点
        const viewportCenter = scrollTop + windowHeight / 2;

        // 固定开始点：当模特图片的中心点刚好到达屏幕中心时
        const stickyStartPoint = modelImageCenter - windowHeight / 2;

        // 固定结束点：当商品区域快要滚动结束时（商品区域底部 - 屏幕高度）
        const stickyEndPoint = productsTop + productsHeight - windowHeight;

        let newState = 'normal';

        // 判断滚动状态
        if (scrollTop >= stickyStartPoint && scrollTop <= stickyEndPoint) {
          newState = 'sticky';
        } else if (scrollTop > stickyEndPoint) {
          newState = 'end';
        }

        // 只在状态改变时更新DOM
        if (newState !== currentState) {
          // 保存原始宽度
          if (newState === 'sticky' && currentState === 'normal') {
            const originalWidth = modelSection.offsetWidth;
            modelSection.style.setProperty('--original-width', originalWidth + 'px');
          }

          // 清除所有状态
          modelSection.classList.remove('sticky', 'sticky-end');
          productsSection.classList.remove('offset');

          // 应用新状态
          if (newState === 'sticky') {
            modelSection.classList.add('sticky');
            productsSection.classList.add('offset');
          } else if (newState === 'end') {
            modelSection.classList.add('sticky-end');
            productsSection.classList.add('offset');
          }

          currentState = newState;
        }
      }

      // 使用节流的滚动监听
      let ticking = false;

      function handleScroll() {
        if (!ticking) {
          requestAnimationFrame(() => {
            updateStickyState();
            ticking = false;
          });
          ticking = true;
        }
      }

      // 监听滚动事件
      window.addEventListener('scroll', handleScroll, { passive: true });

      // 监听窗口大小变化
      window.addEventListener('resize', function () {
        if (isMobile()) {
          // 移动端时移除所有固定状态
          modelSection.classList.remove('sticky', 'sticky-end');
          productsSection.classList.remove('offset');
          currentState = 'normal';
        } else {
          // 桌面端重新计算
          setTimeout(updateStickyState, 100);
        }
      });

      // 页面加载完成后初始化
      window.addEventListener('load', () => {
        setTimeout(updateStickyState, 200);
      });

      // 立即执行一次
      setTimeout(updateStickyState, 100);
    }

    // 添加到购物车功能
    function initAddToCart() {
      const cartForms = document.querySelectorAll('.add-to-cart-form');

      cartForms.forEach((form) => {
        form.addEventListener('submit', function (e) {
          e.preventDefault();
          e.stopPropagation();

          const formData = new FormData(this);
          const button = this.querySelector('.add-to-cart-btn');
          const originalText = button.innerHTML;

          button.innerHTML = '追加中...';
          button.disabled = true;

          fetch('/cart/add.js', {
            method: 'POST',
            body: formData,
          })
            .then((response) => response.json())
            .then((data) => {
              button.innerHTML = '追加完了！';
              setTimeout(() => {
                button.innerHTML = originalText;
                button.disabled = false;
              }, 2000);
            })
            .catch((error) => {
              console.error('Error:', error);
              button.innerHTML = 'エラー';
              setTimeout(() => {
                button.innerHTML = originalText;
                button.disabled = false;
              }, 2000);
            });
        });
      });
    }

    // 初始化所有功能
    initImageCarousel();
    initScrollSticky();
    initAddToCart();

    // 窗口大小变化时重新初始化
    window.addEventListener('resize', function () {
      // 重新初始化轮播功能以适应移动端/桌面端切换
      setTimeout(() => {
        initImageCarousel();
      }, 100);
    });
  });
</script>

{% schema %}
{
  "name": "戒指展示模块",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "header",
      "content": "基本设置"
    },
    {
      "type": "text",
      "id": "sectiontitle",
      "label": "模块标题",
      "default": "戒指系列"
    },
    {
      "type": "collection",
      "id": "collection_handle",
      "label": "选择商品系列",
      "info": "选择要展示的商品系列"
    },
    {
      "type": "range",
      "id": "maxproducts",
      "min": 1,
      "max": 20,
      "step": 1,
      "label": "最大显示产品数",
      "default": 8
    },
    {
      "type": "header",
      "content": "模特图片设置"
    },
    {
      "type": "image_picker",
      "id": "modelimage",
      "label": "模特图片"
    },
    {
      "type": "text",
      "id": "modelimagealt",
      "label": "模特图片alt文本",
      "default": "戒指模特展示"
    },
    {
      "type": "color",
      "id": "placeholdercolor",
      "label": "占位背景颜色",
      "default": "#f0f0f0"
    },
    {
      "type": "header",
      "content": "样式设置"
    },
    {
      "type": "color",
      "id": "backgroundcolor",
      "label": "背景颜色",
      "default": "#ffffff"
    },
    {
      "type": "range",
      "id": "topmargin",
      "min": 0,
      "max": 100,
      "step": 10,
      "unit": "px",
      "label": "上边距",
      "default": 0
    },
    {
      "type": "range",
      "id": "bottommargin",
      "min": 0,
      "max": 100,
      "step": 10,
      "unit": "px",
      "label": "下边距",
      "default": 0
    },
    {
      "type": "header",
      "content": "产品标题样式"
    },
    {
      "type": "range",
      "id": "producttitlesize",
      "min": 12,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "产品标题字体大小",
      "default": 14
    },
    {
      "type": "color",
      "id": "producttitlecolor",
      "label": "产品标题颜色",
      "default": "#333333"
    },
    {
      "type": "color",
      "id": "producttitlehovercolor",
      "label": "产品标题悬停颜色",
      "default": "#666666"
    },
    {
      "type": "header",
      "content": "产品价格样式"
    },
    {
      "type": "range",
      "id": "productpricesize",
      "min": 12,
      "max": 24,
      "step": 1,
      "unit": "px",
      "label": "产品价格字体大小",
      "default": 16
    },
    {
      "type": "color",
      "id": "productpricecolor",
      "label": "产品价格颜色",
      "default": "#333333"
    },
    {
      "type": "color",
      "id": "originalpricecolor",
      "label": "原价颜色",
      "default": "#999999"
    },
    {
      "type": "header",
      "content": "产品标签设置"
    },
    {
      "type": "checkbox",
      "id": "show_product_tags",
      "label": "显示产品标签",
      "default": true
    },
    {
      "type": "text",
      "id": "allowed_tags",
      "label": "允许显示的标签",
      "info": "用逗号分隔多个标签，例如：NEW,HOT,SALE。留空则显示所有标签",
      "placeholder": "NEW,HOT,SALE"
    },
    {
      "type": "range",
      "id": "max_tags_display",
      "min": 1,
      "max": 5,
      "step": 1,
      "label": "最大显示标签数量",
      "default": 3
    },
    {
      "type": "color",
      "id": "product_tag_bg_color",
      "label": "标签背景颜色",
      "default": "#ff4444"
    },
    {
      "type": "color",
      "id": "product_tag_text_color",
      "label": "标签文字颜色",
      "default": "#ffffff"
    },
    {
      "type": "range",
      "id": "product_tag_font_size",
      "min": 8,
      "max": 14,
      "step": 1,
      "unit": "px",
      "label": "标签字体大小",
      "default": 10
    },
    {
      "type": "range",
      "id": "product_tag_border_radius",
      "min": 0,
      "max": 10,
      "step": 1,
      "unit": "px",
      "label": "标签圆角",
      "default": 3
    },
    {
      "type": "header",
      "content": "按钮样式"
    },
    {
      "type": "text",
      "id": "addtocarttext",
      "label": "添加到购物车按钮文字",
      "default": "カートに追加"
    },
    {
      "type": "color",
      "id": "buttonbgcolor",
      "label": "按钮背景颜色",
      "default": "rgba(255, 255, 255, 0.95)"
    },
    {
      "type": "color",
      "id": "buttontextcolor",
      "label": "按钮文字颜色",
      "default": "#333333"
    },
    {
      "type": "color",
      "id": "buttonbordercolor",
      "label": "按钮边框颜色",
      "default": "rgba(255, 255, 255, 0.8)"
    },
    {
      "type": "color",
      "id": "buttonhovercolor",
      "label": "按钮悬停颜色",
      "default": "rgba(255, 255, 255, 1)"
    },
    {
      "type": "range",
      "id": "buttonborderradius",
      "min": 0,
      "max": 25,
      "step": 1,
      "unit": "px",
      "label": "按钮圆角",
      "default": 4
    },
    {
      "type": "header",
      "content": "提示信息"
    },
    {
      "type": "text",
      "id": "emptymessage",
      "label": "空集合提示文字",
      "default": "暂无商品，请在后台添加产品或选择正确的系列"
    }
  ],
  "presets": [
    {
      "name": "戒指展示模块",
      "settings": {
        "sectiontitle": "戒指系列",
        "maxproducts": 8
      }
    }
  ]
}
{% endschema %}
