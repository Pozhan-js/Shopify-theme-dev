<!-- 背包展示模块 - 后台可编辑版 -->
<div class="backpack-showcase-container">
    <div class="backpack-showcase-wrapper">
        <!-- 左侧商品列表 -->
        <div class="backpack-products-section" id="backpackProductsSection">
            <div class="backpack-products-container">
                <div class="backpack-products-grid">
                    {%- comment -%}
                    获取指定系列的商品
                    优先级：指定系列 > 产品类型 > 所有商品
                    {%- endcomment -%}
                    
                    {%- assign target_products = blank -%}
                    
                    {%- if section.settings.collection_handle != blank -%}
                        {%- comment -%} 如果指定了系列，获取该系列的商品 {%- endcomment -%}
                        {%- assign target_collection = collections[section.settings.collection_handle] -%}
                        {%- if target_collection -%}
                            {%- assign target_products = target_collection.products -%}
                        {%- endif -%}
                    {%- elsif section.settings.product_type != blank -%}
                        {%- comment -%} 如果没有指定系列但指定了产品类型，按类型筛选 {%- endcomment -%}
                        {%- assign target_products = collections.all.products | where: 'type', section.settings.product_type -%}
                    {%- else -%}
                        {%- comment -%} 都没有指定则显示所有商品 {%- endcomment -%}
                        {%- assign target_products = collections.all.products -%}
                    {%- endif -%}
                    
                    {%- comment -%} 如果启用了产品类型过滤，在系列基础上再次过滤 {%- endcomment -%}
                    {%- if section.settings.enable_type_filter and section.settings.product_type != blank and section.settings.collection_handle != blank -%}
                        {%- assign target_products = target_products | where: 'type', section.settings.product_type -%}
                    {%- endif -%}
                    
                    {%- comment -%} 按照设置的排序方式排序 {%- endcomment -%}
                    {%- case section.settings.sort_by -%}
                        {%- when 'price_ascending' -%}
                            {%- assign target_products = target_products | sort: 'price' -%}
                        {%- when 'price_descending' -%}
                            {%- assign target_products = target_products | sort: 'price' | reverse -%}
                        {%- when 'title_ascending' -%}
                            {%- assign target_products = target_products | sort: 'title' -%}
                        {%- when 'title_descending' -%}
                            {%- assign target_products = target_products | sort: 'title' | reverse -%}
                        {%- when 'created_ascending' -%}
                            {%- assign target_products = target_products | sort: 'created_at' -%}
                        {%- when 'created_descending' -%}
                            {%- assign target_products = target_products | sort: 'created_at' | reverse -%}
                        {%- when 'best_selling' -%}
                            {%- comment -%} 保持原有顺序，通常系列已按销量排序 {%- endcomment -%}
                        {%- else -%}
                            {%- comment -%} 默认保持原有顺序 {%- endcomment -%}
                    {%- endcase -%}
                    
                    {%- assign product_count = target_products.size -%}
                    
                    {%- if product_count > 0 -%}
                        {%- for product in target_products limit: section.settings.max_products -%}
                            <div class="backpack-product-card">
                                <div class="backpack-product-image-container" data-product-id="{{ product.id }}">
                                    <a href="{{ product.url }}" class="backpack-product-link">
                                        {%- if product.images.size > 0 -%}
                                            {%- for image in product.images limit: 5 -%}
                                                <img src="{{ image | image_url: width: 300, height: 300, crop: 'center' }}" 
                                                     alt="{{ product.title }} - 图片 {{ forloop.index }}" 
                                                     class="backpack-product-image {% if forloop.first %}active{% endif %}"
                                                     data-image-index="{{ forloop.index0 }}"
                                                     loading="lazy">
                                            {%- endfor -%}
                                            {%- if product.images.size > 1 -%}
                                                <div class="backpack-progress-bar-container">
                                                    <div class="backpack-progress-bar"></div>
                                                </div>
                                            {%- endif -%}
                                        {%- else -%}
                                            <div class="backpack-product-image-placeholder">暂无图片</div>
                                        {%- endif -%}
                                    </a>
                                    
                                    {%- if section.settings.show_add_to_cart -%}
                                        <form method="post" action="/cart/add" class="backpack-add-to-cart-form">
                                            <input type="hidden" name="id" value="{{ product.variants.first.id }}">
                                            <input type="hidden" name="quantity" value="1">
                                            <button type="submit" class="backpack-add-to-cart-btn">
                                                <svg width="16" height="16" viewBox="0 0 24 24" fill="none">
                                                    <path d="M9 2L6 6H3L5 20H19L21 6H18L15 2H9Z" stroke="currentColor" stroke-width="2"/>
                                                </svg>
                                                カートに追加
                                            </button>
                                        </form>
                                    {%- endif -%}
                                </div>
                                
                                <div class="backpack-product-info">
                                    <h3 class="backpack-product-title">
                                        <a href="{{ product.url }}">{{ product.title }}</a>
                                    </h3>
                                    <div class="backpack-product-price">
                                        {%- if product.compare_at_price > product.price -%}
                                            <span class="backpack-original-price">{{ product.compare_at_price | money }}</span>
                                        {%- endif -%}
                                        <span class="backpack-current-price">{{ product.price | money }}</span>
                                    </div>
                                </div>
                            </div>
                        {%- endfor -%}
                    {%- else -%}
                        <div class="backpack-no-products-message">
                            <p>{{ section.settings.empty_message | default: '暂无商品，请在后台添加产品' }}</p>
                        </div>
                    {%- endif -%}
                </div>
                
                {%- if target_products.size > section.settings.max_products -%}
                    <div class="backpack-view-more-container">
                        {%- if section.settings.collection_handle != blank -%}
                            <a href="/collections/{{ section.settings.collection_handle }}" class="backpack-view-more-btn">
                        {%- elsif section.settings.product_type != blank -%}
                            <a href="/collections/all?filter.p.product.type={{ section.settings.product_type | url_encode }}" class="backpack-view-more-btn">
                        {%- else -%}
                            <a href="/collections/all" class="backpack-view-more-btn">
                        {%- endif -%}
                            {{ section.settings.view_more_text | default: '查看更多商品' }}
                        </a>
                    </div>
                {%- endif -%}
            </div>
        </div>
        
        <!-- 右侧固定模特图 -->
        <div class="backpack-model-image-section" id="backpackModelSection">
            {% if section.settings.model_image %}
                <img src="{{ section.settings.model_image | image_url: width: 800, height: 1200, crop: 'center' }}" 
                     alt="{{ section.settings.model_image_alt | default: '背包模特展示' }}" 
                     class="backpack-model-image"
                     loading="lazy">
            {% else %}
                <div class="backpack-model-placeholder" style="background: {{ section.settings.placeholder_color }};"></div>
            {% endif %}
        </div>
    </div>
</div>

<style>
    .backpack-showcase-container {
        width: 100%;
        margin: {{ section.settings.top_margin }}px 0 {{ section.settings.bottom_margin }}px 0;
        padding: 0;
        position: relative;
        box-sizing: border-box;
    }

    .backpack-showcase-wrapper {
        display: flex;
        align-items: flex-start;
        position: relative;
        width: 100%;
        max-width: 100%;
        overflow: hidden;
        justify-content: flex-start;
        box-sizing: border-box;
    }

    .backpack-products-container {
        padding: 0 40px 60px 40px;
        max-width: 600px;
        margin: 0 auto;
    }

    /* 桌面端：两列展示 */
    .backpack-products-grid {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        gap: 20px;
        margin-bottom: 40px;
    }

    .backpack-product-card {
        background: transparent;
        border-radius: 8px;
        overflow: hidden;
        transition: transform 0.3s ease;
        display: flex;
        flex-direction: column;
        gap: 15px;
    }

    .backpack-product-card:hover {
        transform: translateY(-3px);
    }

    .backpack-product-image-container {
        position: relative;
        width: 100%;
        aspect-ratio: 1;
        overflow: hidden;
        border-radius: 8px;
        background: #f5f5f5;
    }

    .backpack-product-link {
        display: block;
        width: 100%;
        height: 100%;
        position: relative;
    }

    .backpack-product-image {
        width: 100%;
        height: 100%;
        object-fit: cover;
        position: absolute;
        top: 0;
        left: 0;
        opacity: 0;
        transition: opacity 0.3s ease, transform 0.3s ease;
    }

    .backpack-product-image.active {
        opacity: 1;
    }

    .backpack-product-image-placeholder {
        width: 100%;
        height: 100%;
        background: linear-gradient(135deg, #f0f0f0 0%, #e0e0e0 100%);
        display: flex;
        align-items: center;
        justify-content: center;
        color: #999;
        font-size: 12px;
    }

    .backpack-product-card:hover .backpack-product-image.active {
        transform: scale(1.05);
    }

    /* 轮播进度条 */
    .backpack-progress-bar-container {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 3px;
        background: rgba(255, 255, 255, 0.3);
        z-index: 2;
        overflow: hidden;
    }

    .backpack-progress-bar {
        height: 100%;
        background: rgba(255, 255, 255, 0.9);
        width: 0%;
        transition: width 0.1s linear;
    }


    .backpack-product-info {
        padding: 0;
        text-align: left;
    }

    .backpack-product-title {
        font-size: 14px;
        font-weight: 500;
        margin-bottom: 8px;
        line-height: 1.4;
        overflow: hidden;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
    }

    .backpack-product-title a {
        color: #333;
        text-decoration: none;
    }

    .backpack-product-price {
        font-size: 16px;
        font-weight: 600;
        color: #333;
        margin-bottom: 12px;
        text-align: left;
    }

    .backpack-original-price {
        text-decoration: line-through;
        color: #999;
        margin-right: 8px;
        font-size: 14px;
    }

    .backpack-current-price {
        color: #333;
    }

    .backpack-add-to-cart-form {
        position: absolute;
        bottom: 12px;
        left: 12px;
        right: 12px;
        margin: 0;
        opacity: 0;
        transform: translateY(10px);
        transition: all 0.3s ease;
        z-index: 3;
    }

    .backpack-product-card:hover .backpack-add-to-cart-form {
        opacity: 1;
        transform: translateY(0);
    }

    .backpack-add-to-cart-btn {
        background: rgba(255, 255, 255, 0.95);
        color: #000;
        border: 1px solid rgba(255, 255, 255, 0.8);
        padding: 8px 16px;
        border-radius: {{ section.settings.button_border_radius }}px;
        font-size: 12px;
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 4px;
        transition: all 0.3s ease;
        width: 100%;
        backdrop-filter: blur(10px);
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    }

    .backpack-add-to-cart-btn:hover {
        background: rgba(255, 255, 255, 1);
        border-color: rgba(255, 255, 255, 1);
        transform: translateY(-1px);
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
        color: #000;
    }

    .backpack-no-products-message {
        text-align: center;
        padding: 40px;
        color: #666;
        grid-column: 1 / -1;
    }

    .backpack-view-more-container {
        text-align: center;
        margin-top: 40px;
    }

    .backpack-view-more-btn {
        display: inline-block;
        padding: 12px 30px;
        background: transparent;
        color: #333;
        text-decoration: none;
        border: 1px solid #333;
        border-radius: 25px;
        transition: all 0.3s ease;
    }

    .backpack-view-more-btn:hover {
        background: #333;
        color: white;
    }

    /* 右侧模特图 */
    .backpack-model-image-section {
        position: absolute;
        right: 0;
        top: 0;
        height: 100vh;
        overflow: hidden;
        z-index: 10;
        width: 50%;
        max-width: 50%;
        will-change: transform, position;
        transition: none;
        flex-shrink: 0;
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    .backpack-model-image-section.sticky {
        position: fixed;
        top: 0;
        right: 0;
        width: 50%;
        max-width: 50%;
        height: 100vh;
        z-index: 1;
        transform: translateZ(0);
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    .backpack-model-image-section.sticky-end {
        position: absolute;
        bottom: 0;
        right: 0;
        width: 50%;
        max-width: 50%;
        height: 100vh;
        top: auto;
        transform: translateZ(0);
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    /* 当模特图固定时，确保商品列表有足够空间 */
    .backpack-showcase-wrapper:has(.backpack-model-image-section.sticky) .backpack-products-section {
        width: 50%;
        max-width: 50%;
    }

    /* 备用方案：通过JavaScript添加类来控制 */
    .backpack-products-section.with-fixed-model {
        width: 50%;
        max-width: 50%;
        margin-right: 0;
        transition: none;
    }

    /* 确保商品列表始终保持正确的宽度和间距 */
    .backpack-products-section {
        background: {{ section.settings.background_color }};
        position: relative;
        z-index: 5;
        width: 50%;
        max-width: 50%;
        flex-shrink: 0;
        box-sizing: border-box;
    }

    .backpack-model-image, .backpack-model-placeholder {
        width: 100%;
        height: 100%;
        object-fit: cover;
        object-position: center;
        backface-visibility: hidden;
        transform: translateZ(0);
        transition: none;
        display: block;
        margin: 0;
        padding: 0;
        border: none;
        outline: none;
        max-width: 100%;
        box-sizing: border-box;
    }

    .backpack-model-placeholder {
        background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
    }

    /* 响应式设计 */
    @media screen and (max-width: 749px) {
        .backpack-showcase-wrapper {
            flex-direction: column;
        }

        .backpack-model-image-section {
            position: relative !important;
            height: 50vh;
            flex: none;
            width: 100% !important;
            overflow: hidden;
        }

        .backpack-model-image-section.sticky,
        .backpack-model-image-section.sticky-end {
            position: relative !important;
            width: 100% !important;
            margin-left: 0 !important;
        }

        /* 移动端模特图片只显示中间部分 - 禁用所有变换和过渡 */
        .backpack-model-image {
            width: 100%;
            height: 100%;
            object-fit: cover;
            object-position: center center;
            transform: none !important;
            transition: none !important;
        }

        /* 移动端禁用悬停效果 */
        .backpack-product-card:hover .backpack-product-image.active {
            transform: none !important;
        }

        .backpack-model-placeholder {
            background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
            transform: none !important;
            transition: none !important;
        }

        .backpack-products-section {
            flex: none;
            margin-left: 0 !important;
            width: 100% !important;
        }

        .backpack-products-container {
            padding: 40px 0;
            max-width: 100%;
        }

        /* 手机端：横向排列 */
        .backpack-products-grid {
            display: flex;
            flex-direction: row;
            overflow-x: auto;
            gap: 20px;
            margin-bottom: 40px;
            padding-bottom: 10px;
        }

        .backpack-product-card {
            flex: 0 0 150px;
            min-width: 150px;
            flex-direction: column;
            gap: 10px;
        }

        .backpack-product-card .backpack-product-image-container {
            width: 150px;
            height: 150px;
        }

        .backpack-product-card .backpack-product-info {
            padding: 0;
            width: 100%;
        }

        .backpack-product-card .backpack-product-title {
            font-size: 14px;
        }

        .backpack-product-card .backpack-add-to-cart-form {
            position: static;
            opacity: 1;
            transform: none;
            margin-top: 8px;
        }

        .backpack-product-card .backpack-add-to-cart-btn {
            background: rgba(255, 255, 255, 0.95);
            color: #000 !important;
            border: 1px solid rgba(255, 255, 255, 0.8);
            backdrop-filter: none;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        }


        .backpack-products-grid::-webkit-scrollbar {
            height: 4px;
        }

        .backpack-products-grid::-webkit-scrollbar-track {
            background: #f1f1f1;
            border-radius: 2px;
        }

        .backpack-products-grid::-webkit-scrollbar-thumb {
            background: #ccc;
            border-radius: 2px;
        }

        .backpack-products-grid::-webkit-scrollbar-thumb:hover {
            background: #999;
        }

        /* 移动端隐藏进度条 */
        .backpack-progress-bar-container {
            display: none;
        }
    }
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // 检查是否为移动端
    function isMobile() {
        return window.innerWidth <= 749;
    }
    
    // 图片轮播功能
    function initImageCarousel() {
        const productCards = document.querySelectorAll('.backpack-product-card');
        
        productCards.forEach(card => {
            const imageContainer = card.querySelector('.backpack-product-image-container');
            const images = imageContainer.querySelectorAll('.backpack-product-image');
            const progressBar = imageContainer.querySelector('.backpack-progress-bar');
            
            if (images.length <= 1) return; // 如果只有一张图片，不需要轮播
            
            let currentIndex = 0;
            let hoverInterval;
            let progressInterval;
            let isHovering = false;
            let progress = 0;
            const intervalDuration = 800; // 每张图片显示时间
            const progressStep = 100 / (intervalDuration / 10); // 每10ms增加的进度
            
            // 显示指定索引的图片
            function showImage(index) {
                images.forEach((img, i) => {
                    img.classList.toggle('active', i === index);
                });
                currentIndex = index;
                // 重置进度条
                progress = 0;
                if (progressBar) {
                    progressBar.style.width = '0%';
                }
            }
            
            // 更新进度条
            function updateProgress() {
                if (progressBar && isHovering) {
                    progress += progressStep;
                    progressBar.style.width = Math.min(progress, 100) + '%';
                }
            }
            
            // 自动轮播到下一张
            function nextImage() {
                const nextIndex = (currentIndex + 1) % images.length;
                showImage(nextIndex);
            }
            
            // 鼠标悬停开始轮播
            imageContainer.addEventListener('mouseenter', function() {
                if (isMobile()) return; // 移动端不启用轮播
                
                isHovering = true;
                progress = 0;
                
                // 立即显示下一张图片
                if (images.length > 1) {
                    nextImage();
                    
                    // 设置轮播定时器
                    hoverInterval = setInterval(nextImage, intervalDuration);
                    
                    // 设置进度条更新定时器
                    progressInterval = setInterval(updateProgress, 10);
                }
            });
            
            // 鼠标离开停止轮播并回到第一张
            imageContainer.addEventListener('mouseleave', function() {
                if (isMobile()) return;
                
                isHovering = false;
                clearInterval(hoverInterval);
                clearInterval(progressInterval);
                
                // 回到第一张图片并重置进度条
                setTimeout(() => {
                    if (!isHovering) {
                        showImage(0);
                    }
                }, 200);
            });
        });
    }
    
    // 滚动固定功能（桌面端）
    function initScrollSticky() {
        if (isMobile()) return;
        
        const modelSection = document.getElementById('backpackModelSection');
        const productsSection = document.getElementById('backpackProductsSection');
        const container = document.querySelector('.backpack-showcase-container');
        
        if (!modelSection || !productsSection || !container) return;
        
        let ticking = false;
        let currentState = 'normal'; // 'normal', 'sticky', 'sticky-end'
        let isTransitioning = false;
        let animationId = null;
        
        // 缓存容器信息，减少重复计算
        let cachedContainerInfo = null;
        let cacheTime = 0;
        const CACHE_DURATION = 100; // 缓存100ms
        
        function getContainerInfo() {
            const now = Date.now();
            if (cachedContainerInfo && (now - cacheTime) < CACHE_DURATION) {
                return cachedContainerInfo;
            }
            
            const containerRect = container.getBoundingClientRect();
            const containerTop = containerRect.top + window.pageYOffset;
            const containerHeight = container.offsetHeight;
            
            cachedContainerInfo = {
                top: containerTop,
                bottom: containerTop + containerHeight,
                height: containerHeight
            };
            cacheTime = now;
            
            return cachedContainerInfo;
        }
        
        function applyState(newState, force = false) {
            if (currentState === newState && !force) return;
            if (isTransitioning && !force) return;
            
            isTransitioning = true;
            
            // 取消之前的动画
            if (animationId) {
                cancelAnimationFrame(animationId);
            }
            
            // 使用 requestAnimationFrame 确保状态变化的平滑性
            animationId = requestAnimationFrame(() => {
                // 预先计算所有需要的状态
                const shouldAddSticky = newState === 'sticky';
                const shouldAddStickyEnd = newState === 'sticky-end';
                const shouldAddFixedModel = newState !== 'normal';
                
                // 批量更新DOM，减少重排重绘
                modelSection.classList.toggle('sticky', shouldAddSticky);
                modelSection.classList.toggle('sticky-end', shouldAddStickyEnd);
                productsSection.classList.toggle('with-fixed-model', shouldAddFixedModel);
                
                currentState = newState;
                
                // 使用更短的延迟，提高响应性
                setTimeout(() => {
                    isTransitioning = false;
                    animationId = null;
                }, 20);
            });
        }
        
        function handleScroll() {
            if (!ticking) {
                ticking = true;
                
                requestAnimationFrame(function() {
                    const scrollTop = window.pageYOffset;
                    const windowHeight = window.innerHeight;
                    const containerInfo = getContainerInfo();
                    
                    // 计算关键位置
                    const containerTop = containerInfo.top;
                    const containerBottom = containerInfo.bottom;
                    const viewportBottom = scrollTop + windowHeight;
                    
                    // 使用更小的缓冲区，提高精度
                    const buffer = 2;
                    
                    let newState;
                    
                    // 优化状态判断逻辑，减少条件判断
                    if (scrollTop < containerTop - buffer) {
                        newState = 'normal';
                    } else if (viewportBottom >= containerBottom - buffer) {
                        newState = 'sticky-end';
                    } else {
                        newState = 'sticky';
                    }
                    
                    // 应用状态变化
                    applyState(newState);
                    
                    ticking = false;
                });
            }
        }
        
        // 防抖处理的resize事件
        let resizeTimeout;
        function handleResize() {
            clearTimeout(resizeTimeout);
            resizeTimeout = setTimeout(function() {
                // 清除缓存
                cachedContainerInfo = null;
                
                if (window.innerWidth <= 749) {
                    applyState('normal', true);
                } else {
                    // 重置状态并重新计算
                    currentState = 'normal';
                    isTransitioning = false;
                    handleScroll();
                }
            }, 150);
        }
        
        // 优化事件监听器
        const scrollOptions = { 
            passive: true,
            capture: false
        };
        
        // 绑定事件
        window.addEventListener('scroll', handleScroll, scrollOptions);
        window.addEventListener('resize', handleResize, { passive: true });
        
        // 页面加载完成后初始化
        if (document.readyState === 'complete') {
            setTimeout(handleScroll, 50);
        } else {
            window.addEventListener('load', function() {
                setTimeout(handleScroll, 50);
            }, { once: true });
        }
        
        // 立即执行一次初始化
        setTimeout(handleScroll, 50);
        
        // 页面卸载时清理
        window.addEventListener('beforeunload', function() {
            if (animationId) {
                cancelAnimationFrame(animationId);
            }
            clearTimeout(resizeTimeout);
        });
    }
    
    // 初始化所有功能
    initImageCarousel();
    initScrollSticky();
    
    // 窗口大小变化时重新初始化
    window.addEventListener('resize', function() {
        // 重新初始化轮播功能以适应移动端/桌面端切换
        setTimeout(() => {
            initImageCarousel();
        }, 100);
    });
});
</script>

{% schema %}
{
  "name": "背包展示模块",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "header",
      "content": "商品设置"
    },
    {
      "type": "collection",
      "id": "collection_handle",
      "label": "选择商品系列",
      "info": "选择要显示的商品系列。如果不选择，将根据产品类型筛选。"
    },
    {
      "type": "text",
      "id": "product_type",
      "label": "产品类型",
      "default": "背包",
      "info": "当未选择系列时，按此类型筛选商品。也可用于在选定系列基础上进一步筛选。"
    },
    {
      "type": "checkbox",
      "id": "enable_type_filter",
      "label": "在选定系列基础上按产品类型筛选",
      "default": false,
      "info": "启用后，即使选择了系列，也会按产品类型进一步筛选"
    },
    {
      "type": "select",
      "id": "sort_by",
      "options": [
        {
          "value": "default",
          "label": "默认排序"
        },
        {
          "value": "best_selling",
          "label": "最畅销"
        },
        {
          "value": "price_ascending",
          "label": "价格：低到高"
        },
        {
          "value": "price_descending",
          "label": "价格：高到低"
        },
        {
          "value": "title_ascending",
          "label": "标题：A-Z"
        },
        {
          "value": "title_descending",
          "label": "标题：Z-A"
        },
        {
          "value": "created_ascending",
          "label": "创建时间：旧到新"
        },
        {
          "value": "created_descending",
          "label": "创建时间：新到旧"
        }
      ],
      "default": "default",
      "label": "商品排序方式"
    },
    {
      "type": "range",
      "id": "max_products",
      "min": 4,
      "max": 20,
      "step": 1,
      "label": "显示产品数量",
      "default": 12
    },
    {
      "type": "header",
      "content": "外观设置"
    },
    {
      "type": "image_picker",
      "id": "model_image",
      "label": "模特图片"
    },
    {
      "type": "text",
      "id": "model_image_alt",
      "label": "模特图片alt文字",
      "default": "背包模特展示"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "背景颜色",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "placeholder_color",
      "label": "占位背景颜色",
      "default": "#4facfe"
    },
    {
      "type": "header",
      "content": "按钮设置"
    },
    {
      "type": "checkbox",
      "id": "show_add_to_cart",
      "label": "显示加入购物车按钮",
      "default": true
    },
    {
      "type": "range",
      "id": "button_border_radius",
      "min": 0,
      "max": 50,
      "step": 1,
      "unit": "px",
      "label": "按钮圆角",
      "default": 4
    },
    {
      "type": "header",
      "content": "查看更多设置"
    },
    {
      "type": "text",
      "id": "view_more_text",
      "label": "查看更多按钮文字",
      "default": "查看更多商品"
    },
    {
      "type": "header",
      "content": "其他设置"
    },
    {
      "type": "text",
      "id": "empty_message",
      "label": "空列表提示文字",
      "default": "暂无商品，请在后台添加产品"
    },
    {
      "type": "range",
      "id": "top_margin",
      "min": 0,
      "max": 100,
      "step": 10,
      "unit": "px",
      "label": "上边距",
      "default": 60
    },
    {
      "type": "range",
      "id": "bottom_margin",
      "min": 0,
      "max": 100,
      "step": 10,
      "unit": "px",
      "label": "下边距",
      "default": 0
    }
  ],
  "presets": [
    {
      "name": "背包展示模块",
      "settings": {
        "product_type": "背包",
        "max_products": 12,
        "view_more_text": "查看更多商品",
        "show_add_to_cart": true,
        "enable_type_filter": false,
        "sort_by": "default"
      }
    }
  ]
}
{% endschema %}
