<!-- 背包展示模块 - 后台可编辑版 -->
<div class="backpack-showcase-container">
  <div class="backpack-showcase-wrapper">
    <!-- 移动端模特图 - 在顶部 -->
    <div class="backpack-model-image-section mobile-top" id="backpackModelSectionMobile">
      {% if section.settings.model_image %}
        <img
          src="{{ section.settings.model_image | image_url: width: 800, height: 1200, crop: 'center' }}"
          alt="{{ section.settings.model_image_alt | default: '背包模特展示' }}"
          class="backpack-model-image"
          loading="lazy"
        >
      {% else %}
        <div class="backpack-model-placeholder" style="background: {{ section.settings.placeholder_color }};"></div>
      {% endif %}
    </div>

    <!-- 左侧商品列表 -->
    <div class="backpack-products-section" id="backpackProductsSection">
      <div class="backpack-products-container">
        <div class="backpack-products-grid">
          {%- comment -%}
          获取指定系列的商品
          优先级：指定系列 > 产品类型 > 所有商品
          {%- endcomment -%}
          
          {%- assign target_products = blank -%}
          
          {%- if section.settings.collection_handle != blank -%}
            {%- comment -%} 如果指定了系列，获取该系列的商品 {%- endcomment -%}
            {%- assign target_collection = collections[section.settings.collection_handle] -%}
            {%- if target_collection -%}
              {%- assign target_products = target_collection.products -%}
            {%- endif -%}
          {%- elsif section.settings.product_type != blank -%}
            {%- comment -%} 如果没有指定系列但指定了产品类型，按类型筛选 {%- endcomment -%}
            {%- assign target_products = collections.all.products | where: 'type', section.settings.product_type -%}
          {%- else -%}
            {%- comment -%} 都没有指定则显示所有商品 {%- endcomment -%}
            {%- assign target_products = collections.all.products -%}
          {%- endif -%}
          
          {%- comment -%} 如果启用了产品类型过滤，在系列基础上再次过滤 {%- endcomment -%}
          {%- if section.settings.enable_type_filter and section.settings.product_type != blank and section.settings.collection_handle != blank -%}
            {%- assign target_products = target_products | where: 'type', section.settings.product_type -%}
          {%- endif -%}
          
          {%- comment -%} 按照设置的排序方式排序 {%- endcomment -%}
          {%- case section.settings.sort_by -%}
            {%- when 'price_ascending' -%}
              {%- assign target_products = target_products | sort: 'price' -%}
            {%- when 'price_descending' -%}
              {%- assign target_products = target_products | sort: 'price' | reverse -%}
            {%- when 'title_ascending' -%}
              {%- assign target_products = target_products | sort: 'title' -%}
            {%- when 'title_descending' -%}
              {%- assign target_products = target_products | sort: 'title' | reverse -%}
            {%- when 'created_ascending' -%}
              {%- assign target_products = target_products | sort: 'created_at' -%}
            {%- when 'created_descending' -%}
              {%- assign target_products = target_products | sort: 'created_at' | reverse -%}
            {%- when 'best_selling' -%}
              {%- comment -%} 保持原有顺序，通常系列已按销量排序 {%- endcomment -%}
            {%- else -%}
              {%- comment -%} 默认保持原有顺序 {%- endcomment -%}
          {%- endcase -%}
          
          {%- assign product_count = target_products.size -%}
          
          {%- if product_count > 0 -%}
            {%- for product in target_products limit: section.settings.max_products -%}
              <div class="backpack-product-card">
                <div class="backpack-product-image-container" data-product-id="{{ product.id }}">
                  <a href="{{ product.url }}" class="backpack-product-link">
                    {%- if product.images.size > 0 -%}
                      {%- for image in product.images limit: 5 -%}
                        <img
                          src="{{ image | image_url: width: 300, height: 300, crop: 'center' }}"
                          alt="{{ product.title }} - 图片 {{ forloop.index }}"
                          class="backpack-product-image {% if forloop.first %}active{% endif %}"
                          data-image-index="{{ forloop.index0 }}"
                          loading="lazy"
                        >
                      {%- endfor -%}
                      {%- if product.images.size > 1 -%}
                        <div class="backpack-progress-bar-container">
                          <div class="backpack-progress-bar"></div>
                        </div>
                      {%- endif -%}
                    {%- else -%}
                      <div class="backpack-product-image-placeholder">暂无图片</div>
                    {%- endif -%}
                  </a>

                  {%- if section.settings.show_add_to_cart -%}
                    <form method="post" action="/cart/add" class="backpack-add-to-cart-form">
                      <input type="hidden" name="id" value="{{ product.variants.first.id }}">
                      <input type="hidden" name="quantity" value="1">
                      <button type="submit" class="backpack-add-to-cart-btn">
                        <svg width="16" height="16" viewBox="0 0 24 24" fill="none">
                          <path d="M9 2L6 6H3L5 20H19L21 6H18L15 2H9Z" stroke="currentColor" stroke-width="2"/>
                        </svg>
                        {{ section.settings.addtocarttext | default: 'カートに追加' }}
                      </button>
                    </form>
                  {%- endif -%}
                </div>

                <div class="backpack-product-info">
                  <h3 class="backpack-product-title">
                    <a href="{{ product.url }}">{{ product.title }}</a>
                  </h3>
                  <div class="backpack-product-price">
                    {%- if product.compare_at_price > product.price -%}
                      <span class="backpack-original-price">{{ product.compare_at_price | money }}</span>
                    {%- endif -%}
                    <span class="backpack-current-price">{{ product.price | money }}</span>
                  </div>
                </div>
              </div>
            {%- endfor -%}
          {%- else -%}
            <div class="backpack-no-products-message">
              <p>{{ section.settings.empty_message | default: '暂无商品，请在后台添加产品或选择正确的系列' }}</p>
            </div>
          {%- endif -%}
        </div>

        {%- if target_products.size > section.settings.max_products -%}
          <div class="backpack-view-more-container">
            {%- if section.settings.collection_handle != blank -%}
              <a href="/collections/{{ section.settings.collection_handle }}" class="backpack-view-more-btn">
            {%- elsif section.settings.product_type != blank -%}
              <a href="/collections/all?filter.p.product.type={{ section.settings.product_type | url_encode }}" class="backpack-view-more-btn">
            {%- else -%}
              <a href="/collections/all" class="backpack-view-more-btn">
            {%- endif -%}
              {{ section.settings.view_more_text | default: '查看更多商品' }}
            </a>
          </div>
        {%- endif -%}
      </div>
    </div>

    <!-- 右侧模特图 - 桌面端 -->
    <div class="backpack-model-image-section desktop-only" id="backpackModelSection">
      {% if section.settings.model_image %}
        <img
          src="{{ section.settings.model_image | image_url: width: 800, height: 1200, crop: 'center' }}"
          alt="{{ section.settings.model_image_alt | default: '背包模特展示' }}"
          class="backpack-model-image"
          loading="lazy"
        >
      {% else %}
        <div class="backpack-model-placeholder" style="background: {{ section.settings.placeholder_color }};"></div>
      {% endif %}
    </div>
  </div>
</div>

<style>
  .backpack-showcase-container {
    width: 100%;
    margin: {{ section.settings.top_margin }}px 0 {{ section.settings.bottom_margin }}px 0;
    padding: 0;
    position: relative;
    background: {{ section.settings.background_color }};
  }

  .backpack-showcase-wrapper {
    display: flex;
    flex-direction: row;
    align-items: flex-start;
  }

  /* 移动端顶部模特图 - 默认隐藏 */
  .backpack-model-image-section.mobile-top {
    display: none;
    width: 100%;
    height: auto;
    max-height: 50vh;
    overflow: hidden;
    padding: 20px;
    margin-bottom: 20px;
  }

  /* 桌面端右侧模特图 */
  .backpack-model-image-section.desktop-only {
    display: flex;
    flex: 1;
    position: relative;
    height: 600px;
    overflow: hidden;
    z-index: 10;
    align-items: center;
    justify-content: center;
    padding: 40px 20px;
  }

  /* 左侧商品列表 */
  .backpack-products-section {
    flex: 1;
    background: transparent;
    position: relative;
    z-index: 2;
  }

  .backpack-products-section.offset {
    margin-right: 50%;
  }

  .backpack-products-container {
    padding: 40px 40px 60px 40px;
    max-width: 600px;
    margin: 0 auto;
    display: flex;
    flex-direction: column;
    justify-content: center;
  }

  /* 桌面端：两列展示 */
  .backpack-products-grid {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 25px;
    margin-bottom: 40px;
    align-items: start;
  }

  .backpack-product-card {
    background: transparent;
    border-radius: 8px;
    overflow: hidden;
    transition: transform 0.3s ease;
    display: flex;
    flex-direction: column;
    gap: 15px;
  }

  .backpack-product-card:hover {
    transform: translateY(-3px);
  }

  .backpack-product-image-container {
    position: relative;
    width: 100%;
    aspect-ratio: 1;
    overflow: hidden;
    border-radius: 8px;
    background: #f5f5f5;
  }

  .backpack-product-link {
    display: block;
    width: 100%;
    height: 100%;
    position: relative;
  }

  .backpack-product-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    position: absolute;
    top: 0;
    left: 0;
    opacity: 0;
    transition: opacity 0.3s ease, transform 0.3s ease;
  }

  .backpack-product-image.active {
    opacity: 1;
  }

  .backpack-product-image-placeholder {
    width: 100%;
    height: 100%;
    background: linear-gradient(135deg, #f0f0f0 0%, #e0e0e0 100%);
    display: flex;
    align-items: center;
    justify-content: center;
    color: #999;
    font-size: 12px;
  }

  .backpack-product-card:hover .backpack-product-image.active {
    transform: scale(1.05);
  }

  /* 轮播进度条 */
  .backpack-progress-bar-container {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 3px;
    background: rgba(255, 255, 255, 0.3);
    z-index: 2;
    overflow: hidden;
  }

  .backpack-progress-bar {
    height: 100%;
    background: rgba(255, 255, 255, 0.9);
    width: 0%;
    transition: width 0.1s linear;
  }

  .backpack-product-card .backpack-product-info {
    padding: 0;
    text-align: left;
  }

  .backpack-product-card .backpack-product-title {
    font-size: {{ section.settings.producttitlesize | default: 14 }}px;
    font-weight: 500;
    margin-bottom: 8px;
    line-height: 1.4;
    overflow: hidden;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    color: {{ section.settings.producttitlecolor | default: '#333' }};
  }

  .backpack-product-card .backpack-product-title a {
    color: inherit;
    text-decoration: none;
    transition: color 0.3s ease;
  }

  .backpack-product-card .backpack-product-title a:hover {
    color: {{ section.settings.producttitlehovercolor | default: '#666' }};
  }

  .backpack-product-card .backpack-product-price {
    font-size: {{ section.settings.productpricesize | default: 16 }}px;
    font-weight: 600;
    color: {{ section.settings.productpricecolor | default: '#333' }};
    margin-bottom: 12px;
    text-align: left;
  }

  .backpack-product-card .backpack-original-price {
    text-decoration: line-through;
    color: {{ section.settings.originalpricecolor | default: '#999' }};
    margin-right: 8px;
    font-size: {{ section.settings.productpricesize | default: 16 | minus: 2 }}px;
  }

  .backpack-product-card .backpack-current-price {
    color: {{ section.settings.productpricecolor | default: '#333' }};
  }

  .backpack-product-card .backpack-add-to-cart-form {
    position: absolute;
    bottom: 12px;
    left: 12px;
    right: 12px;
    margin: 0;
    opacity: 0;
    transform: translateY(10px);
    transition: all 0.3s ease;
    z-index: 3;
  }

  .backpack-product-card:hover .backpack-add-to-cart-form {
    opacity: 1;
    transform: translateY(0);
  }

  .backpack-product-card .backpack-add-to-cart-btn {
    background: {{ section.settings.buttonbgcolor | default: 'rgba(255, 255, 255, 0.95)' }};
    color: {{ section.settings.buttontextcolor | default: '#333' }};
    border: 1px solid {{ section.settings.buttonbordercolor | default: 'rgba(255, 255, 255, 0.8)' }};
    padding: 8px 16px;
    border-radius: {{ section.settings.buttonborderradius | default: 4 }}px;
    font-size: 12px;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 4px;
    transition: all 0.3s ease;
    width: 100%;
    backdrop-filter: blur(10px);
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  }

  .backpack-product-card .backpack-add-to-cart-btn:hover {
    background: {{ section.settings.buttonhovercolor | default: 'rgba(255, 255, 255, 1)' }};
    border-color: {{ section.settings.buttonbordercolor | default: 'rgba(255, 255, 255, 1)' }};
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  }

  .backpack-no-products-message {
    text-align: center;
    padding: 60px 20px;
    color: #666;
    grid-column: 1 / -1;
  }

  .backpack-no-products-message p {
    font-size: 16px;
    margin: 0;
  }

  .backpack-view-more-container {
    text-align: center;
    margin-top: 40px;
  }

  .backpack-view-more-btn {
    display: inline-block;
    padding: 12px 30px;
    background: {{ section.settings.viewmorebgcolor | default: 'transparent' }};
    color: {{ section.settings.viewmoretextcolor | default: '#333' }};
    text-decoration: none;
    border: 1px solid {{ section.settings.viewmorebordercolor | default: '#333' }};
    border-radius: {{ section.settings.viewmoreborderradius | default: 25 }}px;
    transition: all 0.3s ease;
    font-size: {{ section.settings.viewmorefontsize | default: 14 }}px;
  }

  .backpack-view-more-btn:hover {
    background: {{ section.settings.viewmorehovercolor | default: '#333' }};
    color: {{ section.settings.viewmorehovertextcolor | default: 'white' }};
  }

  .backpack-model-image-section.desktop-only.sticky {
    position: fixed;
    top: 50%;
    right: 0;
    width: 50vw;
    height: 600px;
    transform: translateY(-50%);
  }

  .backpack-model-image-section.desktop-only.sticky-end {
    position: absolute;
    bottom: 0;
    right: 0;
    width: 50vw;
    height: 600px;
    transform: none;
  }

  .backpack-model-image, .backpack-model-placeholder {
    width: 100%;
    height: 100%;
    max-width: none;
    max-height: none;
    object-fit: cover;
    object-position: center;
    border-radius: 12px;
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
  }

  .backpack-model-placeholder {
    background: {{ section.settings.placeholder_color }};
    display: flex;
    align-items: center;
    justify-content: center;
    color: #999;
    font-size: 18px;
    aspect-ratio: 3/4;
    min-height: 400px;
  }

  /* 响应式设计 */
  @media screen and (max-width: 749px) {
    .backpack-showcase-wrapper {
      flex-direction: column;
    }

    /* 移动端显示顶部模特图，隐藏右侧模特图 */
    .backpack-model-image-section.mobile-top {
      display: block;
      order: -1; /* 确保在最顶部 */
    }

    .backpack-model-image-section.desktop-only {
      display: none !important;
    }

    /* 移动端模特图片样式 */
    .backpack-model-image-section.mobile-top .backpack-model-image {
      width: 100%;
      height: auto;
      max-height: 40vh;
      object-fit: cover;
      object-position: center center;
      transform: none !important;
      transition: none !important;
      border-radius: 8px;
    }

    .backpack-model-image-section.mobile-top .backpack-model-placeholder {
      transform: none !important;
      transition: none !important;
      min-height: 300px;
      aspect-ratio: 3/4;
    }

    /* 移动端禁用悬停效果 */
    .backpack-product-card:hover .backpack-product-image.active {
      transform: none !important;
    }

    .backpack-products-section {
      flex: none;
      margin-right: 0 !important;
      width: 100%;
    }

    .backpack-products-container {
      padding: 20px;
    }

    /* 手机端：横向排列 */
    .backpack-products-grid {
      display: flex;
      flex-direction: row;
      overflow-x: auto;
      gap: 20px;
      margin-bottom: 40px;
      padding-bottom: 10px;
    }

    .backpack-product-card {
      flex: 0 0 150px;
      min-width: 150px;
      flex-direction: column;
      gap: 10px;
    }

    .backpack-product-card .backpack-product-image-container {
      width: 150px;
      height: 150px;
    }

    .backpack-product-card .backpack-product-info {
      padding: 0;
      width: 100%;
    }

    .backpack-product-card .backpack-product-title {
      font-size: 12px;
    }

    .backpack-product-card .backpack-add-to-cart-form {
      position: static;
      opacity: 1;
      transform: none;
      margin-top: 8px;
    }

    .backpack-product-card .backpack-add-to-cart-btn {
      background: {{ section.settings.buttonbgcolor | default: 'rgba(255, 255, 255, 0.95)' }};
      color: {{ section.settings.buttontextcolor | default: '#333' }};
      border: 1px solid {{ section.settings.buttonbordercolor | default: 'rgba(255, 255, 255, 0.8)' }};
      backdrop-filter: none;
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    }

    .backpack-products-grid::-webkit-scrollbar {
      height: 4px;
    }

    .backpack-products-grid::-webkit-scrollbar-track {
      background: #f1f1f1;
      border-radius: 2px;
    }

    .backpack-products-grid::-webkit-scrollbar-thumb {
      background: #ccc;
      border-radius: 2px;
    }

    .backpack-products-grid::-webkit-scrollbar-thumb:hover {
      background: #999;
    }

    /* 移动端隐藏进度条 */
    .backpack-progress-bar-container {
      display: none;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    // 检查是否为移动端
    function isMobile() {
      return window.innerWidth <= 749;
    }

    // 图片轮播功能
    function initImageCarousel() {
      const productCards = document.querySelectorAll('.backpack-product-card');

      productCards.forEach((card) => {
        const imageContainer = card.querySelector('.backpack-product-image-container');
        const images = imageContainer.querySelectorAll('.backpack-product-image');
        const progressBar = imageContainer.querySelector('.backpack-progress-bar');

        if (images.length <= 1) return; // 如果只有一张图片，不需要轮播

        let currentIndex = 0;
        let hoverInterval;
        let progressInterval;
        let isHovering = false;
        let progress = 0;
        const intervalDuration = 800; // 每张图片显示时间
        const progressStep = 100 / (intervalDuration / 10); // 每10ms增加的进度

        // 显示指定索引的图片
        function showImage(index) {
          images.forEach((img, i) => {
            img.classList.toggle('active', i === index);
          });
          currentIndex = index;
          // 重置进度条
          progress = 0;
          if (progressBar) {
            progressBar.style.width = '0%';
          }
        }

        // 更新进度条
        function updateProgress() {
          if (progressBar && isHovering) {
            progress += progressStep;
            progressBar.style.width = Math.min(progress, 100) + '%';
          }
        }

        // 自动轮播到下一张
        function nextImage() {
          const nextIndex = (currentIndex + 1) % images.length;
          showImage(nextIndex);
        }

        // 鼠标悬停开始轮播
        imageContainer.addEventListener('mouseenter', function () {
          if (isMobile()) return; // 移动端不启用轮播

          isHovering = true;
          progress = 0;

          // 立即显示下一张图片
          if (images.length > 1) {
            nextImage();

            // 设置轮播定时器
            hoverInterval = setInterval(nextImage, intervalDuration);

            // 设置进度条更新定时器
            progressInterval = setInterval(updateProgress, 10);
          }
        });

        // 鼠标离开停止轮播并回到第一张
        imageContainer.addEventListener('mouseleave', function () {
          if (isMobile()) return;

          isHovering = false;
          clearInterval(hoverInterval);
          clearInterval(progressInterval);

          // 回到第一张图片并重置进度条
          setTimeout(() => {
            if (!isHovering) {
              showImage(0);
            }
          }, 200);
        });
      });
    }

    // 滚动固定功能（桌面端）
    function initScrollSticky() {
      if (isMobile()) return;

      const modelSection = document.getElementById('backpackModelSection');
      const productsSection = document.getElementById('backpackProductsSection');
      const container = document.querySelector('.backpack-showcase-container');

      if (!modelSection || !productsSection || !container) return;

      let currentState = 'normal';

      function updateStickyState() {
        const scrollTop = window.pageYOffset;
        const windowHeight = window.innerHeight;
        
        // 获取容器的实际位置信息
        const containerRect = container.getBoundingClientRect();
        const containerTop = containerRect.top + scrollTop;
        
        // 获取模特图片区域的实际位置信息
        const modelRect = modelSection.getBoundingClientRect();
        const modelTop = containerTop; // 模特图片从容器顶部开始
        const modelHeight = 600; // 固定高度
        
        // 获取商品区域的位置信息
        const productsRect = productsSection.getBoundingClientRect();
        const productsTop = containerTop; // 商品区域也从容器顶部开始
        const productsHeight = productsSection.offsetHeight;
        
        // 关键修复：计算模特图片的实际中心位置
        // 模特图片的中心点 = 模特图片顶部 + 模特图片高度的一半
        const modelImageCenter = modelTop + (modelHeight / 2);
        
        // 屏幕中心点
        const viewportCenter = scrollTop + (windowHeight / 2);
        
        // 固定开始点：当模特图片的中心点刚好到达屏幕中心时
        const stickyStartPoint = modelImageCenter - (windowHeight / 2);
        
        // 固定结束点：当商品区域快要滚动结束时（商品区域底部 - 屏幕高度）
        const stickyEndPoint = productsTop + productsHeight - windowHeight;
        
        let newState = 'normal';
        
        // 判断滚动状态
        if (scrollTop >= stickyStartPoint && scrollTop <= stickyEndPoint) {
          newState = 'sticky';
        } else if (scrollTop > stickyEndPoint) {
          newState = 'end';
        }
        
        // 只在状态改变时更新DOM
        if (newState !== currentState) {
          // 保存原始宽度
          if (newState === 'sticky' && currentState === 'normal') {
            const originalWidth = modelSection.offsetWidth;
            modelSection.style.setProperty('--original-width', originalWidth + 'px');
          }
          
          // 清除所有状态
          modelSection.classList.remove('sticky', 'sticky-end');
          productsSection.classList.remove('offset');
          
          // 应用新状态
          if (newState === 'sticky') {
            modelSection.classList.add('sticky');
            productsSection.classList.add('offset');
          } else if (newState === 'end') {
            modelSection.classList.add('sticky-end');
            productsSection.classList.add('offset');
          }
          
          currentState = newState;
        }
      }

      // 使用节流的滚动监听
      let ticking = false;
      
      function handleScroll() {
        if (!ticking) {
          requestAnimationFrame(() => {
            updateStickyState();
            ticking = false;
          });
          ticking = true;
        }
      }

      // 监听滚动事件
      window.addEventListener('scroll', handleScroll, { passive: true });

      // 监听窗口大小变化
      window.addEventListener('resize', function () {
        if (isMobile()) {
          // 移动端时移除所有固定状态
          modelSection.classList.remove('sticky', 'sticky-end');
          productsSection.classList.remove('offset');
          currentState = 'normal';
        } else {
          // 桌面端重新计算
          setTimeout(updateStickyState, 100);
        }
      });

      // 页面加载完成后初始化
      window.addEventListener('load', () => {
        setTimeout(updateStickyState, 200);
      });

      // 立即执行一次
      setTimeout(updateStickyState, 100);
    }

    // 添加到购物车功能
    function initAddToCart() {
      const cartForms = document.querySelectorAll('.backpack-add-to-cart-form');

      cartForms.forEach((form) => {
        form.addEventListener('submit', function (e) {
          e.preventDefault();
          e.stopPropagation();

          const formData = new FormData(this);
          const button = this.querySelector('.backpack-add-to-cart-btn');
          const originalText = button.innerHTML;

          button.innerHTML = '追加中...';
          button.disabled = true;

          fetch('/cart/add.js', {
            method: 'POST',
            body: formData,
          })
            .then((response) => response.json())
            .then((data) => {
              button.innerHTML = '追加完了！';
              setTimeout(() => {
                button.innerHTML = originalText;
                button.disabled = false;
              }, 2000);
            })
            .catch((error) => {
              console.error('Error:', error);
              button.innerHTML = 'エラー';
              setTimeout(() => {
                button.innerHTML = originalText;
                button.disabled = false;
              }, 2000);
            });
        });
      });
    }

    // 初始化所有功能
    initImageCarousel();
    initScrollSticky();
    initAddToCart();

    // 窗口大小变化时重新初始化
    window.addEventListener('resize', function () {
      // 重新初始化轮播功能以适应移动端/桌面端切换
      setTimeout(() => {
        initImageCarousel();
      }, 100);
    });
  });
</script>

{% schema %}
{
  "name": "背包展示模块",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "header",
      "content": "基本设置"
    },
    {
      "type": "text",
      "id": "sectiontitle",
      "label": "模块标题",
      "default": "背包系列"
    },
    {
      "type": "collection",
      "id": "collection_handle",
      "label": "选择商品系列",
      "info": "选择要展示的商品系列"
    },
    {
      "type": "range",
      "id": "max_products",
      "min": 1,
      "max": 20,
      "step": 1,
      "label": "最大显示产品数",
      "default": 8
    },
    {
      "type": "header",
      "content": "模特图片设置"
    },
    {
      "type": "image_picker",
      "id": "model_image",
      "label": "模特图片"
    },
    {
      "type": "text",
      "id": "model_image_alt",
      "label": "模特图片alt文本",
      "default": "背包模特展示"
    },
    {
      "type": "color",
      "id": "placeholder_color",
      "label": "占位背景颜色",
      "default": "#f0f0f0"
    },
    {
      "type": "header",
      "content": "样式设置"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "背景颜色",
      "default": "#ffffff"
    },
    {
      "type": "range",
      "id": "top_margin",
      "min": 0,
      "max": 100,
      "step": 10,
      "unit": "px",
      "label": "上边距",
      "default": 0
    },
    {
      "type": "range",
      "id": "bottom_margin",
      "min": 0,
      "max": 100,
      "step": 10,
      "unit": "px",
      "label": "下边距",
      "default": 0
    },
    {
      "type": "header",
      "content": "产品标题样式"
    },
    {
      "type": "range",
      "id": "producttitlesize",
      "min": 12,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "产品标题字体大小",
      "default": 14
    },
    {
      "type": "color",
      "id": "producttitlecolor",
      "label": "产品标题颜色",
      "default": "#333333"
    },
    {
      "type": "color",
      "id": "producttitlehovercolor",
      "label": "产品标题悬停颜色",
      "default": "#666666"
    },
    {
      "type": "header",
      "content": "产品价格样式"
    },
    {
      "type": "range",
      "id": "productpricesize",
      "min": 12,
      "max": 24,
      "step": 1,
      "unit": "px",
      "label": "产品价格字体大小",
      "default": 16
    },
    {
      "type": "color",
      "id": "productpricecolor",
      "label": "产品价格颜色",
      "default": "#333333"
    },
    {
      "type": "color",
      "id": "originalpricecolor",
      "label": "原价颜色",
      "default": "#999999"
    },
    {
      "type": "header",
      "content": "按钮样式"
    },
    {
      "type": "text",
      "id": "addtocarttext",
      "label": "添加到购物车按钮文字",
      "default": "カートに追加"
    },
    {
      "type": "color",
      "id": "buttonbgcolor",
      "label": "按钮背景颜色",
      "default": "rgba(255, 255, 255, 0.95)"
    },
    {
      "type": "color",
      "id": "buttontextcolor",
      "label": "按钮文字颜色",
      "default": "#333333"
    },
    {
      "type": "color",
      "id": "buttonbordercolor",
      "label": "按钮边框颜色",
      "default": "rgba(255, 255, 255, 0.8)"
    },
    {
      "type": "color",
      "id": "buttonhovercolor",
      "label": "按钮悬停颜色",
      "default": "rgba(255, 255, 255, 1)"
    },
    {
      "type": "range",
      "id": "buttonborderradius",
      "min": 0,
      "max": 25,
      "step": 1,
      "unit": "px",
      "label": "按钮圆角",
      "default": 4
    },
    {
      "type": "header",
      "content": "查看更多按钮"
    },
    {
      "type": "text",
      "id": "view_more_text",
      "label": "查看更多按钮文字",
      "default": "查看更多商品"
    },
    {
      "type": "range",
      "id": "viewmorefontsize",
      "min": 12,
      "max": 18,
      "step": 1,
      "unit": "px",
      "label": "查看更多字体大小",
      "default": 14
    },
    {
      "type": "color",
      "id": "viewmorebgcolor",
      "label": "查看更多背景颜色",
      "default": "transparent"
    },
    {
      "type": "color",
      "id": "viewmoretextcolor",
      "label": "查看更多文字颜色",
      "default": "#333333"
    },
    {
      "type": "color",
      "id": "viewmorebordercolor",
      "label": "查看更多边框颜色",
      "default": "#333333"
    },
    {
      "type": "color",
      "id": "viewmorehovercolor",
      "label": "查看更多悬停背景颜色",
      "default": "#333333"
    },
    {
      "type": "color",
      "id": "viewmorehovertextcolor",
      "label": "查看更多悬停文字颜色",
      "default": "#ffffff"
    },
    {
      "type": "range",
      "id": "viewmoreborderradius",
      "min": 0,
      "max": 50,
      "step": 5,
      "unit": "px",
      "label": "查看更多圆角",
      "default": 25
    },
    {
      "type": "header",
      "content": "提示信息"
    },
    {
      "type": "text",
      "id": "empty_message",
      "label": "空集合提示文字",
      "default": "暂无商品，请在后台添加产品或选择正确的系列"
    }
  ],
  "presets": [
    {
      "name": "背包展示模块",
      "settings": {
        "sectiontitle": "背包系列",
        "max_products": 8
      }
    }
  ]
}
{% endschema %}
