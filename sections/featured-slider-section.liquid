{% comment %}
  Featured Products Slider Section
  - Horizontal scroll slider with center snap
  - Center item zoom effect
  - Click to switch functionality
  - Infinite loop carousel
  - Responsive design
{% endcomment %}

<div class="featured-slider-section" data-section-id="{{ section.id }}">
  <div class="container">
    {% if section.settings.heading != blank %}
      <h2 class="section-heading">{{ section.settings.heading }}</h2>
    {% endif %}
    
    {% if section.settings.subheading != blank %}
      <p class="section-subheading">{{ section.settings.subheading }}</p>
    {% endif %}

    <div class="slider-wrapper">
      <div class="slider-container" id="slider-{{ section.id }}">
        <!-- Clone last 3 items at the beginning for infinite scroll -->
        {% assign total_blocks = section.blocks.size %}
        {% if total_blocks > 3 %}
          {% for i in (1..3) %}
            {% assign clone_index = total_blocks | minus: 4 | plus: i %}
            {% assign block = section.blocks[clone_index] %}
            <div class="slide-item clone-item" 
                 data-block-id="{{ block.id }}-clone-start-{{ i }}"
                 data-original-index="{{ clone_index }}"
                 {{ block.shopify_attributes }}>
              
              <div class="slide-content">
                {% if block.type == 'product' and block.settings.product != blank %}
                  <!-- Product Card -->
                  {% liquid
                    assign card_bg_type = block.settings.card_background_type | default: 'solid'
                    assign card_bg_start = block.settings.card_background_start | default: '#ffffff'
                    assign card_bg_end = block.settings.card_background_end | default: '#f8f9fa'
                    assign card_title_color = block.settings.card_title_color | default: section.settings.card_title_color
                    assign card_title_center_color = block.settings.card_title_center_color | default: section.settings.card_title_center_color
                    
                    if card_bg_type == 'gradient'
                      assign card_background = 'linear-gradient(135deg, ' | append: card_bg_start | append: ' 0%, ' | append: card_bg_end | append: ' 100%)'
                    else
                      assign card_background = card_bg_start
                    endif
                  %}
                  
                  <div class="product-card" style="background: {{ card_background }};">
                    {% if block.settings.product.featured_image %}
                      <div class="product-image">
                        <img src="{{ block.settings.product.featured_image | image_url: width: 300 }}" 
                             alt="{{ block.settings.product.featured_image.alt | default: block.settings.product.title }}"
                             width="300"
                             height="{{ 300 | divided_by: block.settings.product.featured_image.aspect_ratio | round }}"
                             loading="lazy">
                      </div>
                    {% endif %}
                    
                    <div class="product-info">
                      <h3 class="product-title" style="color: {{ card_title_color }};">{{ block.settings.product.title }}</h3>
                      {% if block.settings.product.description != blank %}
                        <p class="product-description">{{ block.settings.product.description | strip_html | truncate: 80 }}</p>
                      {% endif %}
                      
                      <div class="product-price">
                        {% if block.settings.product.compare_at_price > block.settings.product.price %}
                          <span class="price-compare">{{ block.settings.product.compare_at_price | money }}</span>
                        {% endif %}
                        <span class="price-current">{{ block.settings.product.price | money }}</span>
                      </div>
                      
                      {% if block.settings.show_button %}
                        <a href="{{ block.settings.product.url }}" class="product-button">
                          {{ block.settings.button_text | default: 'View Product' }}
                        </a>
                      {% endif %}
                    </div>
                  </div>
                {% elsif block.type == 'custom' %}
                  <!-- Custom Card -->
                  {% liquid
                    assign card_bg_type = block.settings.card_background_type | default: 'gradient'
                    assign card_bg_start = block.settings.card_background_start | default: '#ffffff'
                    assign card_bg_end = block.settings.card_background_end | default: '#f8f9fa'
                    assign card_title_color = block.settings.card_title_color | default: section.settings.card_title_color
                    assign card_title_center_color = block.settings.card_title_center_color | default: section.settings.card_title_center_color
                    
                    if card_bg_type == 'gradient'
                      assign card_background = 'linear-gradient(135deg, ' | append: card_bg_start | append: ' 0%, ' | append: card_bg_end | append: ' 100%)'
                    else
                      assign card_background = card_bg_start
                    endif
                  %}
                  
                  <div class="custom-card" style="background: {{ card_background }};">
                    {% if block.settings.image %}
                      <div class="card-image">
                        <img src="{{ block.settings.image | image_url: width: 300 }}" 
                             alt="{{ block.settings.image.alt | default: block.settings.title }}"
                             width="300"
                             height="{{ 300 | divided_by: block.settings.image.aspect_ratio | round }}"
                             loading="lazy">
                      </div>
                    {% endif %}
                    
                    <div class="card-content">
                      {% if block.settings.title != blank %}
                        <h3 class="card-title" style="color: {{ card_title_color }};">{{ block.settings.title }}</h3>
                      {% endif %}
                      {% if block.settings.description != blank %}
                        <p class="card-description">{{ block.settings.description }}</p>
                      {% endif %}
                      
                      {% if block.settings.button_link != blank and block.settings.button_text != blank %}
                        <a href="{{ block.settings.button_link }}" class="card-button">
                          {{ block.settings.button_text }}
                        </a>
                      {% endif %}
                    </div>
                  </div>
                {% endif %}
              </div>
            </div>
          {% endfor %}
        {% endif %}

        <!-- Original items -->
        {% for block in section.blocks %}
          <div class="slide-item" 
               data-block-id="{{ block.id }}"
               data-original-index="{{ forloop.index0 }}"
               {{ block.shopify_attributes }}>
            
            <div class="slide-content">
              {% if block.type == 'product' and block.settings.product != blank %}
                <!-- Product Card -->
                {% liquid
                  assign card_bg_type = block.settings.card_background_type | default: 'solid'
                  assign card_bg_start = block.settings.card_background_start | default: '#ffffff'
                  assign card_bg_end = block.settings.card_background_end | default: '#f8f9fa'
                  assign card_title_color = block.settings.card_title_color | default: section.settings.card_title_color
                  assign card_title_center_color = block.settings.card_title_center_color | default: section.settings.card_title_center_color
                  
                  if card_bg_type == 'gradient'
                    assign card_background = 'linear-gradient(135deg, ' | append: card_bg_start | append: ' 0%, ' | append: card_bg_end | append: ' 100%)'
                  else
                    assign card_background = card_bg_start
                  endif
                %}
                
                <div class="product-card" style="background: {{ card_background }};">
                  {% if block.settings.product.featured_image %}
                    <div class="product-image">
                      <img src="{{ block.settings.product.featured_image | image_url: width: 300 }}" 
                           alt="{{ block.settings.product.featured_image.alt | default: block.settings.product.title }}"
                           width="300"
                           height="{{ 300 | divided_by: block.settings.product.featured_image.aspect_ratio | round }}"
                           loading="lazy">
                    </div>
                  {% endif %}
                  
                  <div class="product-info">
                    <h3 class="product-title" style="color: {{ card_title_color }};">{{ block.settings.product.title }}</h3>
                    {% if block.settings.product.description != blank %}
                      <p class="product-description">{{ block.settings.product.description | strip_html | truncate: 80 }}</p>
                    {% endif %}
                    
                    <div class="product-price">
                      {% if block.settings.product.compare_at_price > block.settings.product.price %}
                        <span class="price-compare">{{ block.settings.product.compare_at_price | money }}</span>
                      {% endif %}
                      <span class="price-current">{{ block.settings.product.price | money }}</span>
                    </div>
                    
                    {% if block.settings.show_button %}
                      <a href="{{ block.settings.product.url }}" class="product-button">
                        {{ block.settings.button_text | default: 'View Product' }}
                      </a>
                    {% endif %}
                  </div>
                </div>
              {% elsif block.type == 'custom' %}
                <!-- Custom Card -->
                {% liquid
                  assign card_bg_type = block.settings.card_background_type | default: 'gradient'
                  assign card_bg_start = block.settings.card_background_start | default: '#ffffff'
                  assign card_bg_end = block.settings.card_background_end | default: '#f8f9fa'
                  assign card_title_color = block.settings.card_title_color | default: section.settings.card_title_color
                  assign card_title_center_color = block.settings.card_title_center_color | default: section.settings.card_title_center_color
                  
                  if card_bg_type == 'gradient'
                    assign card_background = 'linear-gradient(135deg, ' | append: card_bg_start | append: ' 0%, ' | append: card_bg_end | append: ' 100%)'
                  else
                    assign card_background = card_bg_start
                  endif
                %}
                
                <div class="custom-card" style="background: {{ card_background }};">
                  {% if block.settings.image %}
                    <div class="card-image">
                        <img src="{{ block.settings.image | image_url: width: 300 }}" 
                             alt="{{ block.settings.image.alt | default: block.settings.title }}"
                             width="300"
                             height="{{ 300 | divided_by: block.settings.image.aspect_ratio | round }}"
                             loading="lazy">
                    </div>
                  {% endif %}
                  
                  <div class="card-content">
                    {% if block.settings.title != blank %}
                      <h3 class="card-title" style="color: {{ card_title_color }};">{{ block.settings.title }}</h3>
                    {% endif %}
                    {% if block.settings.description != blank %}
                      <p class="card-description">{{ block.settings.description }}</p>
                    {% endif %}
                    
                    {% if block.settings.button_link != blank and block.settings.button_text != blank %}
                      <a href="{{ block.settings.button_link }}" class="card-button">
                        {{ block.settings.button_text }}
                      </a>
                    {% endif %}
                  </div>
                </div>
              {% endif %}
            </div>
          </div>
        {% endfor %}

        <!-- Clone first 3 items at the end for infinite scroll -->
        {% if total_blocks > 3 %}
          {% for i in (0..2) %}
            {% assign block = section.blocks[i] %}
            <div class="slide-item clone-item" 
                 data-block-id="{{ block.id }}-clone-end-{{ i }}"
                 data-original-index="{{ i }}"
                 {{ block.shopify_attributes }}>
              
              <div class="slide-content">
                {% if block.type == 'product' and block.settings.product != blank %}
                  <!-- Product Card -->
                  {% liquid
                    assign card_bg_type = block.settings.card_background_type | default: 'solid'
                    assign card_bg_start = block.settings.card_background_start | default: '#ffffff'
                    assign card_bg_end = block.settings.card_background_end | default: '#f8f9fa'
                    assign card_title_color = block.settings.card_title_color | default: section.settings.card_title_color
                    assign card_title_center_color = block.settings.card_title_center_color | default: section.settings.card_title_center_color
                    
                    if card_bg_type == 'gradient'
                      assign card_background = 'linear-gradient(135deg, ' | append: card_bg_start | append: ' 0%, ' | append: card_bg_end | append: ' 100%)'
                    else
                      assign card_background = card_bg_start
                    endif
                  %}
                  
                  <div class="product-card" style="background: {{ card_background }};">
                    {% if block.settings.product.featured_image %}
                      <div class="product-image">
                        <img src="{{ block.settings.product.featured_image | image_url: width: 300 }}" 
                             alt="{{ block.settings.product.featured_image.alt | default: block.settings.product.title }}"
                             width="300"
                             height="{{ 300 | divided_by: block.settings.product.featured_image.aspect_ratio | round }}"
                             loading="lazy">
                      </div>
                    {% endif %}
                    
                    <div class="product-info">
                      <h3 class="product-title" style="color: {{ card_title_color }};">{{ block.settings.product.title }}</h3>
                      {% if block.settings.product.description != blank %}
                        <p class="product-description">{{ block.settings.product.description | strip_html | truncate: 80 }}</p>
                      {% endif %}
                      
                      <div class="product-price">
                        {% if block.settings.product.compare_at_price > block.settings.product.price %}
                          <span class="price-compare">{{ block.settings.product.compare_at_price | money }}</span>
                        {% endif %}
                        <span class="price-current">{{ block.settings.product.price | money }}</span>
                      </div>
                      
                      {% if block.settings.show_button %}
                        <a href="{{ block.settings.product.url }}" class="product-button">
                          {{ block.settings.button_text | default: 'View Product' }}
                        </a>
                      {% endif %}
                    </div>
                  </div>
                {% elsif block.type == 'custom' %}
                  <!-- Custom Card -->
                  {% liquid
                    assign card_bg_type = block.settings.card_background_type | default: 'gradient'
                    assign card_bg_start = block.settings.card_background_start | default: '#ffffff'
                    assign card_bg_end = block.settings.card_background_end | default: '#f8f9fa'
                    assign card_title_color = block.settings.card_title_color | default: section.settings.card_title_color
                    assign card_title_center_color = block.settings.card_title_center_color | default: section.settings.card_title_center_color
                    
                    if card_bg_type == 'gradient'
                      assign card_background = 'linear-gradient(135deg, ' | append: card_bg_start | append: ' 0%, ' | append: card_bg_end | append: ' 100%)'
                    else
                      assign card_background = card_bg_start
                    endif
                  %}
                  
                  <div class="custom-card" style="background: {{ card_background }};">
                    {% if block.settings.image %}
                      <div class="card-image">
                        <img src="{{ block.settings.image | image_url: width: 300 }}" 
                             alt="{{ block.settings.image.alt | default: block.settings.title }}"
                             width="300"
                             height="{{ 300 | divided_by: block.settings.image.aspect_ratio | round }}"
                             loading="lazy">
                      </div>
                    {% endif %}
                    
                    <div class="card-content">
                      {% if block.settings.title != blank %}
                        <h3 class="card-title" style="color: {{ card_title_color }};">{{ block.settings.title }}</h3>
                      {% endif %}
                      {% if block.settings.description != blank %}
                        <p class="card-description">{{ block.settings.description }}</p>
                      {% endif %}
                      
                      {% if block.settings.button_link != blank and block.settings.button_text != blank %}
                        <a href="{{ block.settings.button_link }}" class="card-button">
                          {{ block.settings.button_text }}
                        </a>
                      {% endif %}
                    </div>
                  </div>
                {% endif %}
              </div>
            </div>
          {% endfor %}
        {% endif %}
      </div>
      
      <!-- Navigation dots -->
      {% if section.settings.show_dots and section.blocks.size > 1 %}
        <div class="slider-dots">
          {% for block in section.blocks %}
            <button class="dot{% if forloop.first %} active{% endif %}" 
                    data-slide="{{ forloop.index0 }}"
                    aria-label="Go to slide {{ forloop.index }}"></button>
          {% endfor %}
        </div>
      {% endif %}
    </div>
  </div>
</div>

<style>
  .featured-slider-section {
    padding: {{ section.settings.padding_top }}px 0 {{ section.settings.padding_bottom }}px;
    background: linear-gradient(135deg, {{ section.settings.gradient_start }} 0%, {{ section.settings.gradient_end }} 100%);
  }

  .container {
    max-width: 1400px;
    margin: 0 auto;
    padding: 0 20px;
  }

  .section-heading {
    text-align: center;
    font-size: 2.5rem;
    font-weight: 700;
    margin-bottom: 16px;
    color: {{ section.settings.heading_color }};
  }

  .section-subheading {
    text-align: center;
    font-size: 1.125rem;
    color: {{ section.settings.text_color }};
    margin-bottom: 48px;
    opacity: 0.8;
  }

  .slider-wrapper {
    position: relative;
    overflow: hidden;
  }

  .slider-container {
    display: flex;
    gap: 24px;
    padding: 40px 20px;
    overflow-x: auto;
    scroll-behavior: smooth;
    scroll-snap-type: x mandatory;
    -webkit-overflow-scrolling: touch;
    scrollbar-width: none;
    -ms-overflow-style: none;
    position: relative;
  }

  .slider-container::-webkit-scrollbar {
    display: none;
  }

  .slide-item {
    flex: 0 0 280px;
    scroll-snap-align: center;
    scroll-snap-stop: always;
    transition: transform 0.3s ease, opacity 0.3s ease;
    opacity: 0.7;
    transform: scale(0.9);
    cursor: pointer;
  }

  .slide-item.center {
    opacity: 1;
    transform: scale(1.1);
    cursor: default;
  }

  .slide-item:not(.center):hover {
    opacity: 0.85;
    transform: scale(0.95);
  }

  .slide-content {
    height: 100%;
  }

  .product-card,
  .custom-card {
    background: white;
    border-radius: 24px;
    padding: 24px;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease;
    height: 100%;
    display: flex;
    flex-direction: column;
    text-align: center;
    min-height: 200px;
  }

  .slide-item.center .product-card,
  .slide-item.center .custom-card {
    box-shadow: 0 20px 50px rgba(0, 0, 0, 0.15);
  }

  .product-image,
  .card-image {
    width: 140px;
    height: 160px;
    margin: 0 auto 16px;
    border-radius: 8px;
    overflow: hidden;
    background: transparent;
  }

  .product-image img,
  .card-image img {
    width: 100%;
    height: 100%;
    object-fit: contain;
  }

  .product-title,
  .card-title {
    font-size: 1.5rem;
    font-weight: 700;
    margin-bottom: 16px;
    color: {{ section.settings.card_title_color }};
    transition: color 0.3s ease;
  }

  .slide-item.center .product-title[style*="color"],
  .slide-item.center .card-title[style*="color"] {
    color: var(--card-title-center-color) !important;
  }
  
  .slide-item.center .product-title:not([style*="color"]),
  .slide-item.center .card-title:not([style*="color"]) {
    color: {{ section.settings.card_title_center_color }};
  }

  .product-description,
  .card-description {
    font-size: 0.875rem;
    line-height: 1.5;
    margin-bottom: 16px;
    color: {{ section.settings.text_color }};
    opacity: 0.8;
    flex-grow: 1;
  }

  .product-price {
    margin-bottom: 24px;
  }

  .price-compare {
    text-decoration: line-through;
    color: #999;
    margin-right: 8px;
  }

  .price-current {
    font-weight: 600;
    font-size: 1.125rem;
    color: {{ section.settings.price_color }};
  }

  .product-button,
  .card-button {
    display: inline-block;
    background-color: {{ section.settings.button_bg_color }};
    color: {{ section.settings.button_text_color }};
    padding: 12px 24px;
    border-radius: 12px;
    text-decoration: none;
    font-weight: 600;
    transition: all 0.3s ease;
    border: none;
    cursor: pointer;
  }

  .product-button:hover,
  .card-button:hover {
    background-color: {{ section.settings.button_bg_color | color_darken: 10 }};
    transform: translateY(-2px);
  }

  .slider-dots {
    display: flex;
    justify-content: center;
    gap: 8px;
    margin-top: 32px;
  }

  .dot {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    background-color: {{ section.settings.dot_color }};
    border: none;
    cursor: pointer;
    opacity: 0.3;
    transition: all 0.3s ease;
  }

  .dot.active,
  .dot:hover {
    opacity: 1;
    transform: scale(1.2);
  }

  /* Responsive Design */
  @media (max-width: 768px) {
    .slide-item {
      flex: 0 0 280px;
    }
    
    .section-heading {
      font-size: 2rem;
    }
    
    .container {
      padding: 0 16px;
    }
    
    .slider-container {
      padding: 20px 16px;
    }
  }

  @media (max-width: 480px) {
    .slide-item {
      flex: 0 0 250px;
    }
    
    .product-card,
    .custom-card {
      border-radius: 24px;
      padding: 24px;
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
      transition: all 0.3s ease;
      height: 100%;
      display: flex;
      flex-direction: column;
      text-align: center;
      min-height: 200px;
    }
    
    .product-card:not([style*="background"]),
    .custom-card:not([style*="background"]) {
      background: white;
    }
  }
  }
</style>

<script>
(function() {
  const slider = document.getElementById('slider-{{ section.id }}');
  const dots = document.querySelectorAll('[data-section-id="{{ section.id }}"] .slider-dots .dot');
  
  if (!slider) return;
  
  const totalBlocks = {{ section.blocks.size }};
  const cloneOffset = totalBlocks > 3 ? 3 : 0;
  let isScrolling = false;
  let scrollTimeout;
  
  function debounce(func, wait) {
    let timeout;
    return function executedFunction(...args) {
      const later = () => {
        clearTimeout(timeout);
        func(...args);
      };
      clearTimeout(timeout);
      timeout = setTimeout(later, wait);
    };
  }
  
  function updateCenterItem(fromClick = false) {
    const slides = slider.querySelectorAll('.slide-item');
    const containerRect = slider.getBoundingClientRect();
    const containerCenter = containerRect.left + containerRect.width / 2;
    
    let centerSlide = null;
    let minDistance = Infinity;
    let centerIndex = 0;
    let realIndex = 0;
    
    // Adjusted for 280px width and 1.15 scale
    const slideWidth = 280;
    const scaleFactor = 1.15;
    const scaledWidth = slideWidth * scaleFactor;
    
    slides.forEach((slide, index) => {
      const slideRect = slide.getBoundingClientRect();
      // Calculate center point considering scaled width
      const slideCenter = slideRect.left + (slide.classList.contains('center') ? scaledWidth/2 : slideWidth/2);
      const distance = Math.abs(slideCenter - containerCenter);
      
      slide.classList.remove('center');
      
      if (distance < minDistance) {
        minDistance = distance;
        centerSlide = slide;
        centerIndex = index;
        
        // Calculate real index for dots
        if (cloneOffset > 0) {
          if (index < cloneOffset) {
            realIndex = totalBlocks - (cloneOffset - index);
          } else if (index >= cloneOffset + totalBlocks) {
            realIndex = index - cloneOffset - totalBlocks;
          } else {
            realIndex = index - cloneOffset;
          }
        } else {
          realIndex = index;
        }
      }
    });
    
    if (centerSlide) {
      centerSlide.classList.add('center');
    }
    
    // Update dots
    dots.forEach((dot, index) => {
      dot.classList.toggle('active', index === realIndex);
    });
    
    // Handle infinite scroll jump for scroll events
    if (cloneOffset > 0 && !fromClick) {
      // Force jump when at the edges, even if isScrolling is true
      if (centerIndex <= 1 || centerIndex >= slides.length - 2) {
        handleInfiniteScroll(centerIndex);
      }
    }
  }
  
  function handleInfiniteScroll(centerIndex) {
    const slides = slider.querySelectorAll('.slide-item');
    const totalSlides = slides.length;
    const visibleItems = Math.floor(slider.offsetWidth / 280); // Adjusted for 280px width
    
    // If we're in the clone area at the beginning
    if (centerIndex < cloneOffset) {
      const targetIndex = totalSlides - cloneOffset - (cloneOffset - centerIndex) - visibleItems;
      jumpToSlide(targetIndex);
    }
    // If we're in the clone area at the end
    else if (centerIndex >= cloneOffset + totalBlocks) {
      const targetIndex = cloneOffset + (centerIndex - cloneOffset - totalBlocks) + visibleItems;
      jumpToSlide(targetIndex);
    }
  }
  
  function jumpToSlide(index) {
    const slides = slider.querySelectorAll('.slide-item');
    if (slides[index]) {
      isScrolling = true;
      slider.style.scrollBehavior = 'auto';
      slides[index].scrollIntoView({
        block: 'nearest',
        inline: 'center'
      });
      
      setTimeout(() => {
        slider.style.scrollBehavior = 'smooth';
        isScrolling = false;
        updateCenterItem();
      }, 50);
    }
  }
  
  function scrollToSlide(index) {
    const slides = slider.querySelectorAll('.slide-item');
    const targetIndex = cloneOffset + index;
    
    if (slides[targetIndex]) {
      isScrolling = true;
      slides[targetIndex].scrollIntoView({
        behavior: 'smooth',
        block: 'nearest',
        inline: 'center'
      });
      
      setTimeout(() => {
        isScrolling = false;
      }, 500);
    }
  }
  
  // Debounced scroll handler
  const debouncedUpdateCenter = debounce(updateCenterItem, 50);
  
  // Scroll event listener
  slider.addEventListener('scroll', () => {
    clearTimeout(scrollTimeout);
    scrollTimeout = setTimeout(() => {
      if (!isScrolling) {
        debouncedUpdateCenter();
      }
    }, 100);
  });
  
  // Click event listeners for slides
  slider.addEventListener('click', (e) => {
    const slideItem = e.target.closest('.slide-item');
    if (slideItem && !slideItem.classList.contains('center')) {
      e.preventDefault();
      
      const slides = Array.from(slider.querySelectorAll('.slide-item'));
      const clickedIndex = slides.indexOf(slideItem);
      let targetIndex = clickedIndex;
      
      // Handle clone items mapping to original items
      if (clickedIndex < cloneOffset) {
        // Beginning clones - map to end originals
        targetIndex = totalBlocks - cloneOffset + clickedIndex;
      } else if (clickedIndex >= cloneOffset + totalBlocks) {
        // End clones - map to beginning originals
        targetIndex = clickedIndex - cloneOffset - totalBlocks;
      }
      
      // Scroll to target item (original or mapped clone)
      if (slides[targetIndex]) {
        isScrolling = true;
        slides[targetIndex].scrollIntoView({
          behavior: 'smooth',
          block: 'nearest',
          inline: 'center'
        });
        
        // Update center item immediately for better UX
        setTimeout(() => {
          updateCenterItem(true);
        }, 500);
      }
    }
  });
  
  // Dot navigation
  dots.forEach((dot, index) => {
    dot.addEventListener('click', () => {
      scrollToSlide(index);
    });
  });
  
  // Keyboard navigation
  document.addEventListener('keydown', (e) => {
    if (e.key === 'ArrowLeft' || e.key === 'ArrowRight') {
      const currentActive = document.querySelector('[data-section-id="{{ section.id }}"] .dot.active');
      if (currentActive) {
        const currentIndex = parseInt(currentActive.dataset.slide);
        let newIndex;
        
        if (e.key === 'ArrowLeft') {
          newIndex = currentIndex > 0 ? currentIndex - 1 : totalBlocks - 1;
        } else {
          newIndex = currentIndex < totalBlocks - 1 ? currentIndex + 1 : 0;
        }
        
        scrollToSlide(newIndex);
      }
    }
  });
  
  // Initialize - scroll to 7th item or first item
  setTimeout(() => {
    const targetIndex = totalBlocks >= 7 ? 6 : 0;
    scrollToSlide(targetIndex);
    
    setTimeout(() => {
      updateCenterItem();
    }, 300);
  }, 100);
  
  // Resize handler
  window.addEventListener('resize', debounce(updateCenterItem, 200));
})();
</script>

{% schema %}
{
  "name": "Featured Products Slider",
  "tag": "section",
  "class": "featured-slider-section-wrapper",
  "settings": [
    {
      "type": "header",
      "content": "Content"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Featured Products"
    },
    {
      "type": "textarea",
      "id": "subheading",
      "label": "Subheading",
      "default": "Discover our most popular items"
    },
    {
      "type": "checkbox",
      "id": "show_dots",
      "label": "Show navigation dots",
      "default": true
    },
    {
      "type": "header",
      "content": "Colors"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background color",
      "default": "#f8f9fa"
    },
    {
      "type": "color",
      "id": "heading_color",
      "label": "Heading color",
      "default": "#1a1a1a"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text color",
      "default": "#666666"
    },
    {
      "type": "color",
      "id": "card_title_color",
      "label": "Card title color",
      "default": "#1a1a1a"
    },
    {
      "type": "color",
      "id": "card_title_center_color",
      "label": "Center card title color",
      "default": "#4ade80"
    },
    {
      "type": "color",
      "id": "price_color",
      "label": "Price color",
      "default": "#2563eb"
    },
    {
      "type": "color",
      "id": "button_bg_color",
      "label": "Button background color",
      "default": "#2563eb"
    },
    {
      "type": "color",
      "id": "button_text_color",
      "label": "Button text color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "dot_color",
      "label": "Dot color",
      "default": "#2563eb"
    },
    {
      "type": "header",
      "content": "Background"
    },
    {
      "type": "color",
      "id": "gradient_start",
      "label": "Background gradient start",
      "default": "#f0f4ff"
    },
    {
      "type": "color",
      "id": "gradient_end",
      "label": "Background gradient end",
      "default": "#e0f2fe"
    },
    {
      "type": "header",
      "content": "Spacing"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 120,
      "step": 4,
      "unit": "px",
      "label": "Top padding",
      "default": 80
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 120,
      "step": 4,
      "unit": "px",
      "label": "Bottom padding",
      "default": 80
    }
  ],
  "blocks": [
    {
      "type": "product",
      "name": "Product",
      "settings": [
        {
          "type": "product",
          "id": "product",
          "label": "Select product"
        },
        {
          "type": "checkbox",
          "id": "show_button",
          "label": "Show button",
          "default": true
        },
        {
          "type": "text",
          "id": "button_text",
          "label": "Button text",
          "default": "View Product"
        },
        {
          "type": "header",
          "content": "Card Colors"
        },
        {
          "type": "select",
          "id": "card_background_type",
          "label": "Background type",
          "options": [
            {
              "value": "solid",
              "label": "Solid color"
            },
            {
              "value": "gradient",
              "label": "Gradient"
            }
          ],
          "default": "solid"
        },
        {
          "type": "color",
          "id": "card_background_start",
          "label": "Background color / Gradient start",
          "default": "#ffffff"
        },
        {
          "type": "color",
          "id": "card_background_end",
          "label": "Gradient end color",
          "default": "#f8f9fa"
        },
        {
          "type": "color",
          "id": "card_title_color",
          "label": "Title color",
          "default": "#1a1a1a"
        },
        {
          "type": "color",
          "id": "card_title_center_color",
          "label": "Title color when centered",
          "default": "#4ade80"
        }
      ]
    },
    {
      "type": "custom",
      "name": "Custom Card",
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "Image"
        },
        {
          "type": "text",
          "id": "title",
          "label": "Title",
          "default": "Card Title"
        },
        {
          "type": "textarea",
          "id": "description",
          "label": "Description",
          "default": "Add your description here"
        },
        {
          "type": "url",
          "id": "button_link",
          "label": "Button link"
        },
        {
          "type": "text",
          "id": "button_text",
          "label": "Button text",
          "default": "Learn More"
        },
        {
          "type": "header",
          "content": "Card Colors"
        },
        {
          "type": "select",
          "id": "card_background_type",
          "label": "Background type",
          "options": [
            {
              "value": "solid",
              "label": "Solid color"
            },
            {
              "value": "gradient",
              "label": "Gradient"
            }
          ],
          "default": "gradient"
        },
        {
          "type": "color",
          "id": "card_background_start",
          "label": "Background color / Gradient start",
          "default": "#ffffff"
        },
        {
          "type": "color",
          "id": "card_background_end",
          "label": "Gradient end color",
          "default": "#f8f9fa"
        },
        {
          "type": "color",
          "id": "card_title_color",
          "label": "Title color",
          "default": "#1a1a1a"
        },
        {
          "type": "color",
          "id": "card_title_center_color",
          "label": "Title color when centered",
          "default": "#4ade80"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Featured Products Slider",
      "blocks": [
        {
          "type": "custom",
          "settings": {
            "title": "Rex",
            "description": "Classic toy dinosaur with authentic details"
          }
        },
        {
          "type": "custom",
          "settings": {
            "title": "Alien",
            "description": "Movable arms, head, and eyes with the classic 'claw' look."
          }
        },
        {
          "type": "custom",
          "settings": {
            "title": "Jessie",
            "description": "The adventurous cowgirl from Toy Story"
          }
        }
      ]
    }
  ]
}
{% endschema %}
